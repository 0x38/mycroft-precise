node {
  name: "gru_1_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 148
        }
        dim {
          size: 13
        }
      }
    }
  }
}
node {
  name: "gru_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000<\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2866910994052887
      }
    }
  }
}
node {
  name: "gru_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2866910994052887
      }
    }
  }
}
node {
  name: "gru_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "gru_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1190167
    }
  }
}
node {
  name: "gru_1/random_uniform/sub"
  op: "Sub"
  input: "gru_1/random_uniform/max"
  input: "gru_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/random_uniform/mul"
  op: "Mul"
  input: "gru_1/random_uniform/RandomUniform"
  input: "gru_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/random_uniform"
  op: "Add"
  input: "gru_1/random_uniform/mul"
  input: "gru_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 13
        }
        dim {
          size: 60
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gru_1/kernel/Assign"
  op: "Assign"
  input: "gru_1/kernel"
  input: "gru_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gru_1/kernel/read"
  op: "Identity"
  input: "gru_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/kernel"
      }
    }
  }
}
node {
  name: "gru_1/recurrent_kernel/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20
          }
          dim {
            size: 60
          }
        }
        tensor_content: "]\031\357<\331o\256\2749\343\325\2751g\241\273[6\240=\305\367\252=\347,\202\275N\221\312\274\333\226\211=p\255$>\006\245E>\253\2131\276\343(\304=4Y@>|\026\032\275vx\275=?\030\023\276\212Y\316\275\311(\030>;\004l=\253\240\t\276\215\202q\275a\275\255\275\246\351_\275k\373\245\275\375\346\310<\376\023\251\275\021\0142\273\321\0003>W\014f\276\277\3235\276Zm\'\276\354kN>\247\205\236>)SV=\233\333~>\331|V=\306V\277;A\030\004=\2628M>]h7\275\265k@>d\353,<-H\257<\255\355\332=\222\254\246\275l\264\323<\270\240\365=\302\324\007>\264\203\021\275A\327\022>\377+\340=\000\201\274\275\234\001\366=\220\275\226>\022B\300\2751C\233\275Ld\251=\375\257*\276\306\333e\276\321\273\027>\262i\360\274\341\315H>-\223Y\275\214\375\335<\341\307\262=\037h\316=\037\277R>F8X\275\270u\234=\030\372\037\276\350f\214\276@\262\245<\021\342\021\276sm\253\275\276\222\347\275\257\327\236\275\312\373$\274\244\006\t=\001\316\211>\231\257k\273s\t\211\276\230g\245\275\020\304\'\276M\004\241=\211\325&\274\245\034\322=a\3310=\n\324\250=\212\273@;{%\274\274\341\376p=\377\272r=\310\225\261\275\344\022\360\275\333\300\034\276.\215&\276\227\325%>\276\364;=\017\273E\276\375\272E\276n\355\321\274\313\206\301=\241`\273=\372\017\311;s\265)\275\321\362 \276\315h\220\274;L\222\276:!<=\225\023\276=\3560\303\275\350\350B\276\332\3268=v\312F>\302\333\320=\227\313\372\275\236\005\226>>\260\003=Y\312T\274z\300\241\276\177a+>C\365\216>\3349\250=~%\223>!\317\340=.k\237\275\035\310\216\275\325\304.\275!\022\207=6\006\211\275r\021\252\275 5\036=\305\375\342\275t~@\276\372G\003={\217*; \256\201\274\226kj>\211y]<\336~P>\246\370\005=\365\264\214\275\273\206\374=\216\033R\275\332\006\200=\021\304\346=\006\362\341\275N[\305\274p\243\326=\232d\022\276\010\357c<\201\020\001>G\277\262\275#/s=\322n\275\274\314\264\\>\'<\340=t\205\260\275\266\326\025=X\315\363=\013\230R\276 \270\274=\241tA>\035\247\207=\343:\035;u\336>\276\245\2023=\221DK=snF\274o\371<>@\361\211\275\253\005.\275\370aD\276:l\347\275\340\250\262\275\030\314H>\003b\262\275\276\320\"\276\\`)\276\227^-\276I\332\005\274\307\272\206\275\n\350\207><\276S=\021\224H=\366]\020\275\217S\206\275\315\302t<d\035\003\276\340\027#>\237u5\276\307u\264<\264\262`=\370\275\224>\230\017\232<\217L/\276\313\311\366;8o\034>\221\'\025\276G\350\003\276\004;\226=\002\342\360=|\260\206=\036\334\273\2755\001\023>\tL\271=\3039\225>F\355\177\273\370\226\373\275\026\3463\276\3321\203>8\003\373\275\372P\232\273m\365\375\275C\302\014\276\016\240)=\'\370\203\275\235\0004\276aP\240\275\317$\270<SL\236\274\r\313\344<\253\224\244\275OHn>\030\275p\274\364\371\023\275\027@\250=\206\205\001\276/7\241=\027\262\217=\322:*\276\022\215l\275)\356\327=\305G*\276\007|4>J^\210\276\325\325c<\325\356\270\275L\\\244=\306+\024\276TZ\234=?\371\301=\327\252a>\207|\327<\025\017\022\276\353\017G>i\361&=\030S\016\276+\255\025>J2\275<\350\334C>\016i\\\276zb\007\274\357\246a\276U\242\265\276\\\314\006>b\344u\275\027\003Q<br\320=\242\367\007\275\250L\030>\221:\215\274\230rU>\260.N=\242\322o>M\221\005\274\3336\300=\0267\r\275\306\236\223\275\350\030 \275g\002\361=\202\365`>U\t\205=\343\241\231>\337nx;\352f\300\275#[c\275\224\344\021;_\013>>\022\214\203\275\013\332X>\266u\215=\025\317e\275\360\317\271=\025*\217=\'dC=f\366\352\275[;\326;\350Q\002<\371\234\252\274\317B\337\275\341\331\356\275\236#r=\304\221\247=\323/p=*]\230\275\230e\201=q<&>\307\325\021>N\325\361=\">\035\273\327\277\374\275s\\2\275]\010D>e\266\004\276G\340/=\210\2026\276Xp\267=\307W*\276\201\377\031\276\004\026\003\275\226\241\237<fVT=\206u\320=;\373\020\276\242=\014\276\302\'\326<\376\262\016>\364\005\224\2749\275\035>\3667\250<K\326\244\276\200\253\206>\201\326-\274c\2419=\270\245\320\274ld.\276;\267\361\275#\220)>]\355\346\275\334-\n>\242\354\304;vf0\276\206\032\r\276\003b\207>\232v\217\276\235k\002\276\251/\017>v\3449\274\257!R\275\340<\325\275\323\370P\275\336\024p>\326\272\005=\'\031\312=^,\247=\221\303\322=\030j8>\334&\261=V\313T\275WR2=\356\'e\2753\341u=I\242\002>\257b9=^\3414\276\223\177\021=%0U\275~\235\337=\210!\256\275\274%\032\276\366L\353\274\231\226&>\305\337!\275\360L\343=p\177\021<\252\003V\276Os\204=C\014\301\275\355s\320\275\265\365\234\273\031\005\226=\240O2\276r\250\323\274\275\306[=\302b\020=\252\232\007>r\273\245=+q\000\276\027\004\207=\020\035\033=d\350\023\276\013\206\327<\277\352|=u\261T\276\202\210H>\034\rb=w\217(;k\220\217=\376\356j\275\217k\316\275\311\323\001\276\250/\256>Z(n\275c\325j\276$\376\272=\314\334\377=\365\027\202>q\255D>j\025\213\275N\020\001=\303\217\026>\371\202\025<\212m\240<\262\022\033>i\217\365< O\236\276\275\027E\275:\364E\274<\035%<\367q_>\252\2333\276\234\211\214\274\346\003=>\024\317\345=\277Nq\275\010]\034\276\321=2:\rC8>\373\235\224\275\242\301\234>\352[\354<\212\316 >:6o\275\260\003\024>\271\265\363<\377E\342\274F\312g=\036\024->Ty\363;E\352\267<\2347#>_X\"\274\303\312\345=\272t9\276;)\321\2748\007d\276W\033\022\276~\226\'=\202\355\241=\374\307\317=\t*\225\276\354Z\371\275\022\301\210\2768k\363\275\310MW\276\316\336\226=\224\255f=?\254V=\204\003\253\275SZ\364\274\207\006\260\276wy\256=<e\253=\331\313\225=^\262\264\275(EK\276\347=A=\274 #<\367;\356\275\377>O\275\010RJ\275\022\352\n\276\216n8\276\234\244K\275\212\222\203\274B\231\214;{\037\'\276\255\257\006>\377De\275\277\256\275\275M\303H\276\323\251\006\276\332\242\n\275%\313q\275kg\026>\301\325\223<\014\033\325\2756\023\337<&\255N<\273-\325=\326.S\275v/e=\251XU>\255\021m\276VJ\032\276O\321\241\274q\237\225=\2458\031>\226\304\225\275\204\240\n\276<\325\036\276\352\027\207\275S\275\203=\265\334z\275\325:\213=\261\313E\276\3625=\276=\t\014\276\220 6\275;|\332\274o\353M>\350\033\206>\353Q\020\276\227\224\315=b\265\376\274\345@\002\276k\320\346\275\\?\313\275\277l\216=\335v\220\275\303&$\274\205\2259>\240DQ\276\245?\224<\276\323\230>,\377\227\275\343\006G>\327/\324\2751\272\026\275\241\214\022\276NQ_\274mz\370;\332\227$\276\033Wx=_\263\005\276\253\265\016>\245\377x\276\263\363\350\273I\267\261=\234\014#=\347\350\177=+\374\312=j\003f>\201\004\231=\244\317\034=\003\244\342;u-P>\202\030F=(\t\212\276J\001\246<\226WO<\264\020\262\275[\037\212=\323t*\275=\002\003>O\265\214\275\243m\231={4\375<\347\022|>\254\263\027\276\020a\316\275\245 j<\007\310R\270\251\306O>\257\353K>\363?\324\274\331\177\337=,\264f>#q8>\241\312(\276i\r\327\275\215\335u=(\236\256=\312\023\330=\346\003\265\275F\315\203=?\305X\274-\331\236\275\245s\016\276=\233\233=\256\273\301\275x\036c<Q\350\362\274\'j\027\275F\335\332\273~\260W\274n\343\233\275r\275=\275\240\275b\2760\'\225=$\rC\276\356s5\274 \0173\2760\366\027>\350\000\253\275E\256\031\276\203\242\006\276$\230\220\275\354\244Z\276\210\373%>\3032\276>\251\231\266\274\343\366\003=\200XP\276\243\361\013\276\0021_<_\244\277\275\353J\006>\237\337c\276\274*\006>\244<\314\276\351\007+\276\235\0021\275f\t9>\315L`>\332\200\215<D\217\226<\364j\361\274Q\227\037\276\177UY\274\240\277\217\275\036\374\232>\375\253e\276\236\377\233\275\346\035\016\276\363\344\013\275\303*7\276\n\310\t\2764\314\\=@\2204=\023N;=\327T\312\275?\0265\273\2712T=\3318\013>\262\350\006=\322ZG=\241\344\201>\354\346\222\275\203\312\225=Y.K=uP\035>\020\363\216\274&T\324\275\361\363\346\275\346<\">,\027\027\275\345\375L=\207\017\037=\314\312\357\275H\263Q\276\372\217\241\275J\n\305=\311\330\001>\032\232\223\275\340\216\014>\374\000\330\275m\277&<\335\313\353=\033+\023\275VT%>S/ \276\0075\023>\210T\345<\350v\216\274s\365\313<\2365\242=5S4\275o\216\037>\035\325\227>^\330\031\275\332e\003=\221\315\375=\321Y)\275V\313y\2750\244\033\276\312\033\314;]K?>TT(\274\211\376\272\274\254y%\276\304[\242>B\331\206<o\205\266\275\364U\345\274}PE=\203r\334=\n\213(\275\241\356\264\275\227\300\215\275V\243\236>w\010\322\274iKP>\t\204%\276\025\371*>k\026\010\2761-\356=\200\215\371\275\363$B\276F\331A\275(@\006>i\251\010\276\355[*\274\034\230\225\275\3565\'\276\3007T\2750\004\026>\321\017\313\274Uu|\275\241$d\273T\002;=\332y\241\275\030\006\360\275\237D<\275C[5\274\355\3019\276\261\034\223\275\031\000[>\267\016\371\275~f\021>\007F9\275\036\342\031\276\214|\020\276!\311\324=\303{:=\021=\367\275-Yk\276\237wB=\200{d>j\200e>\210(m>5\266\206\275\221\360\232<\274?\010=\325\322\"\276\252\267]\275\\U\241=\376f\326\275 \2331=5\n\235\275js\230\275/\266:=\271\023\020>\263\0205>y\222\021=\315\"\235\275\222>\022\275\t\303\324\2755\214\231=\214\210P>\223\210Q\274\321\200&\275\265\377\274<\027Q\260\273\312\205Y>q\201\345=s\251-\275\nK\324<\251\2253\275D\216\n>\312\360\200:D\255\036\275X\033\014=+\317\205<\243:\376\275\312\231 =\237\r\017>`\371s>\317o[\273\3018d=:\305\006\276D\324\203=\235!:=n\332\230\276\005\244\215\273\374\332g\276_\352\202\275\316\201\333\275\240\033o=\362\323\261\276\230\2246>\246\033\010\275\272A\203>`\\>\276\343\306\307\274\245V\216\275LCG>\0200\233\274\331\335\222=-\006\332\275\326\201\274;\032\'\017\2767\254\347=\264W(\276\266\031\302=\027:/\276\023\314#\276\253\004.>\264d.>\375\n*\276\337\243\261=\030+\225=\247\273\002>\261\343e\276\224\347A>l\005\206=\376\225\333=TeS\2757\226\027>F}!<z\2073\275f\221\237\275\374\235\363;$8\000\275\022Y\214>]\240\354\274\000\275W\274_{\224\2751\030n\275e\030(\276T\333\r\276\014&\346=\203\352\366\272*\222\321\275m\305\246\275P\t\204\275\220~\377<b\320\231=\r\202\365\275\021e3\276\234\256\331\275\361j\360\275:\360\360=\365\017(\274\032\257_=\003\344\035>9\356\327=\204\364\300\276$\026\004\275\252)\332\274$\313\232\275\241\263\236\275T\"n\276\n\231)=\305\017\243=yjH>\037\200h>)\035\303\275\003\317\n\276\275\316\000\276\304\341F>&s\230=K\004~=\022\344O=T\023L\272~\374(=&UV\275\226\313\006\275\206\275\337\275.dd\275\331\020\200\276\035\r\235\275\361\204\007\275b\307\352\275\235\360\252\275\352*\261\2751t\254=\344w\022\276\241CI\276\366\"\225\275nl,\276\032s\211\273\354\351\031>\004\362O<\302=\004\276!>\027\276\326)\013>j\275f>\265\360\030\276\262\037\257\275\004\340\337\275\312\304\032\276\242\345u\276\371\325\006<\275`\310=\222P\213\274\373\260\266=\332\363\010=2\013\260\274\001n8>\201\361\223\276\n\272\310\276\355\240\t>V T\276Y\203\025<[\345e\275\024D\304=\210Tb\275\273\036R\274Ke\027=\376\312\367=g\027\375=*@\277<\311\261\n>\343\002+>\243B\253;X\346\242\274\032).\275G\001j\2769x\035>\325\357\375\275\002\226\013\275*\315N>k\\\325=(>\037\276\326\225\312=Fz\245=\257\231\037\275\247\0068=\352\n\325=U\306\371=\316_/\276\177\222\305=\345,q=l\032U>\316\324\275<8\224\202\275r\037\304\274\202\246\003\275\303V\331=\247\n\377\275\3513R\276WB8=\377e\302=\354q\200=\333\357\247<\272\351,\276\324\252\212=\210G\346=\334\346-\276^\352\224>\245b\017=\330\257-;\023\241@>\353$\r\276\201\352\310=\330R\205>\211\026\210\274\330a\275\275#\025\277=\3574\304\275g!v\274\003sV\275^X\271\275\241\223^\275\324\344\014\275\303\373\370\275\350!\270<c\313\000=)$\034=\216\245\"=\257\216\375=\245\243\242\276\363\023\224>\307\"Q\276\260\357R=D\017G\274\"\353\343\275\\\247\031:\026\325\300=\305\220I>\303\371\204\276\335\230+>\346\021^=\260E5<\206bK\276\2205f\276\006\266\341\275\202\026B>\377\006\203\275\326\340\303\274\202\274Y\275W\340\203\276\254%\355\272(\330o<B\002+\276\241J\033\276\322k\330\274m\016B\275\004\276\032\276\023K\264<T^\033\276/\307t\276|\337(\274\205\250\347\275\020-[=962\275\025\246\351\275\321\262\345=3X\214\274\010\031D\275\374Fe=\n\252\216\275\361\245};\005\006C\276\305\200\334\275\270\021\032=\3551:\275[\337d>\376\372\314\275e\347\344=u\245\202\275\242\273N>M\033\016>\360\211\311\275\t\024\001\276%\377\024>4A\257\274k\2423\276\034\026\203\275\214\350O=\265?-=\254&\000>D\255\224>\316u\272\275?\213M\276\235+\251\275\372\350\347<\354\r\334=\334\037:>\271\327\026\276\356\027N=\372T\262\275;\r#>4\340\032>\036\177Q=~\301\031=\275\230\247<\324\023\332\274\215A\366\275w\273\255\275dwL\276&.\030>r\373\221\275\315\206\201<\207\037\010\276<\375\341=\230\020\001>q\316\036=%&\361=\374\177\024\275bPB=\262O\202\275\"\345\325=\355aS>:F\003\275\277\177U>~\356\243=,\217\260=\271\253\343=\2769i==\357\030\274\364\022\035\276w\3766\276\027\204\206\275\255\016\271\275\024?\323;\005\356\n=`t\325=*\261`>\037\'\215>d}\207\275\302\251\252\276\267\203\324=~n\214\2753\341\017>\373\305`>\010\317Z\276\277\352\216\275\334w\224;a\212\026>n^\337=\252\222\347:\210\310\271=pC\210<\245\304?\276\240\333\004\275\026jl\276\310A\256\275\246\370\263=@\302\331<\250\251\233>\335\016Q\274\003$\367\275|\377\215=$\001\034=\264$\020\276M\220\233\275&\372\022\276\022\243-\276\230\371\030\276K\035\316\273\216\306\006\275\250\000\030>Z!\035\276\337!i\275Xw4>\213G:\276\257<\230=\345\262\n>\357\0175>\336\033\350\2751\354J\276!\"\014\275\344\202!\276+\2040=\017\334\207\274\342\346\260\275\275b\224>\331\372\202<M\200\215\275\375\206\265\275V\275\010=\362>\235=\345\353J\276\233\022J>\361X\322=\250qN\271\262\320%\276\274L\273\275\236D\315\274J\350\241\275 C\017\274\310\377\215=r\n\263\275\013\013\002\276\317[5>\237\013\253\274x$\224\275hE\205>\022\277>\275\320\266\231\2754\322s\274+d \276\355,\343\275\213\335*>\037\007\016>\360\331t\276*\355#\273\205\235\t\276\223\226\350<m=\t>\177J\200\276\234\023\037\275\325g\261\275\001\336\326\275V\330\033\276`+1>#\215\304\274\344\274^\275\367U,\276\037\343\235:w0\020\276W\265&>6\022m\275\023\350\236\274/\212\213\276#\023\t;4h\315=\364\267\"=\267\006\366\275\005\342\244=;\213\200\275\024D\004\276\272\275\210>z\2531>\331\374\361\275C\025\024>\351\336%<\306\377\204\275\017\0329>g\213h\275\033\247(=Z\035\324\275h\033!\275\372\316\335\276\366\305\211\275\340x;\272\310.\255\275\355\245\313\275>\214\355\275\032\312\250=eI\336<\363x-\276\274\265C\276\3212\017=\2120\332<\030\376F=\264=9<\330\360C>\250\321\211<\377\035M>\r\243\310\274\200}\257\273t\"\243\275\t\311:=9\254+\276\220\225\354\275"
      }
    }
  }
}
node {
  name: "gru_1/recurrent_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 60
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gru_1/recurrent_kernel/Assign"
  op: "Assign"
  input: "gru_1/recurrent_kernel"
  input: "gru_1/recurrent_kernel/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gru_1/recurrent_kernel/read"
  op: "Identity"
  input: "gru_1/recurrent_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/recurrent_kernel"
      }
    }
  }
}
node {
  name: "gru_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 60
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 60
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gru_1/bias/Assign"
  op: "Assign"
  input: "gru_1/bias"
  input: "gru_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gru_1/bias/read"
  op: "Identity"
  input: "gru_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/bias"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice"
  op: "StridedSlice"
  input: "gru_1/kernel/read"
  input: "gru_1/strided_slice/stack"
  input: "gru_1/strided_slice/stack_1"
  input: "gru_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gru_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_1"
  op: "StridedSlice"
  input: "gru_1/recurrent_kernel/read"
  input: "gru_1/strided_slice_1/stack"
  input: "gru_1/strided_slice_1/stack_1"
  input: "gru_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gru_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_2"
  op: "StridedSlice"
  input: "gru_1/kernel/read"
  input: "gru_1/strided_slice_2/stack"
  input: "gru_1/strided_slice_2/stack_1"
  input: "gru_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gru_1/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_3"
  op: "StridedSlice"
  input: "gru_1/recurrent_kernel/read"
  input: "gru_1/strided_slice_3/stack"
  input: "gru_1/strided_slice_3/stack_1"
  input: "gru_1/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gru_1/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_4"
  op: "StridedSlice"
  input: "gru_1/kernel/read"
  input: "gru_1/strided_slice_4/stack"
  input: "gru_1/strided_slice_4/stack_1"
  input: "gru_1/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gru_1/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_5"
  op: "StridedSlice"
  input: "gru_1/recurrent_kernel/read"
  input: "gru_1/strided_slice_5/stack"
  input: "gru_1/strided_slice_5/stack_1"
  input: "gru_1/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gru_1/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_6"
  op: "StridedSlice"
  input: "gru_1/bias/read"
  input: "gru_1/strided_slice_6/stack"
  input: "gru_1/strided_slice_6/stack_1"
  input: "gru_1/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gru_1/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_7"
  op: "StridedSlice"
  input: "gru_1/bias/read"
  input: "gru_1/strided_slice_7/stack"
  input: "gru_1/strided_slice_7/stack_1"
  input: "gru_1/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gru_1/strided_slice_8/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_8/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_8/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_8"
  op: "StridedSlice"
  input: "gru_1/bias/read"
  input: "gru_1/strided_slice_8/stack"
  input: "gru_1/strided_slice_8/stack_1"
  input: "gru_1/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gru_1/zeros_like"
  op: "ZerosLike"
  input: "gru_1_input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/Sum"
  op: "Sum"
  input: "gru_1/zeros_like"
  input: "gru_1/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gru_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gru_1/ExpandDims"
  op: "ExpandDims"
  input: "gru_1/Sum"
  input: "gru_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/Tile"
  op: "Tile"
  input: "gru_1/ExpandDims"
  input: "gru_1/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/strided_slice_9/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_9/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_9/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_9"
  op: "StridedSlice"
  input: "gru_1_input"
  input: "gru_1/strided_slice_9/stack"
  input: "gru_1/strided_slice_9/stack_1"
  input: "gru_1/strided_slice_9/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "gru_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\r\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/Reshape"
  op: "Reshape"
  input: "gru_1/strided_slice_9"
  input: "gru_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/ones_like/Shape"
  op: "Shape"
  input: "gru_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_1/ones_like"
  op: "Fill"
  input: "gru_1/ones_like/Shape"
  input: "gru_1/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_1/mul"
  op: "Mul"
  input: "gru_1/ones_like"
  input: "gru_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/dropout/keep_prob"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "gru_1/dropout/Shape"
  op: "Shape"
  input: "gru_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru_1/dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_1/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "gru_1/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 12905
    }
  }
}
node {
  name: "gru_1/dropout/random_uniform/sub"
  op: "Sub"
  input: "gru_1/dropout/random_uniform/max"
  input: "gru_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/dropout/random_uniform/mul"
  op: "Mul"
  input: "gru_1/dropout/random_uniform/RandomUniform"
  input: "gru_1/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/dropout/random_uniform"
  op: "Add"
  input: "gru_1/dropout/random_uniform/mul"
  input: "gru_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/dropout/add"
  op: "Add"
  input: "gru_1/dropout/keep_prob"
  input: "gru_1/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/dropout/Floor"
  op: "Floor"
  input: "gru_1/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/dropout/div"
  op: "RealDiv"
  input: "gru_1/mul"
  input: "gru_1/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/dropout/mul"
  op: "Mul"
  input: "gru_1/dropout/div"
  input: "gru_1/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_1/ExpandDims_1"
  op: "ExpandDims"
  input: "gru_1/dropout/mul"
  input: "gru_1/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\224\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/Tile_1"
  op: "Tile"
  input: "gru_1/ExpandDims_1"
  input: "gru_1/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/mul_1"
  op: "Mul"
  input: "gru_1_input"
  input: "gru_1/Tile_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\r\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/Reshape_1"
  op: "Reshape"
  input: "gru_1_input"
  input: "gru_1/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/MatMul"
  op: "MatMul"
  input: "gru_1/Reshape_1"
  input: "gru_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_1/BiasAdd"
  op: "BiasAdd"
  input: "gru_1/MatMul"
  input: "gru_1/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\224\000\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/Reshape_2"
  op: "Reshape"
  input: "gru_1/BiasAdd"
  input: "gru_1/stack_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/strided_slice_10/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_10/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_10/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_10"
  op: "StridedSlice"
  input: "gru_1_input"
  input: "gru_1/strided_slice_10/stack"
  input: "gru_1/strided_slice_10/stack_1"
  input: "gru_1/strided_slice_10/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "gru_1/Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\r\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/Reshape_3"
  op: "Reshape"
  input: "gru_1/strided_slice_10"
  input: "gru_1/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/ones_like_1/Shape"
  op: "Shape"
  input: "gru_1/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/ones_like_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_1/ones_like_1"
  op: "Fill"
  input: "gru_1/ones_like_1/Shape"
  input: "gru_1/ones_like_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_1/mul_2"
  op: "Mul"
  input: "gru_1/ones_like_1"
  input: "gru_1/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/dropout_1/keep_prob"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "gru_1/dropout_1/Shape"
  op: "Shape"
  input: "gru_1/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/dropout_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru_1/dropout_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_1/dropout_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "gru_1/dropout_1/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4542955
    }
  }
}
node {
  name: "gru_1/dropout_1/random_uniform/sub"
  op: "Sub"
  input: "gru_1/dropout_1/random_uniform/max"
  input: "gru_1/dropout_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/dropout_1/random_uniform/mul"
  op: "Mul"
  input: "gru_1/dropout_1/random_uniform/RandomUniform"
  input: "gru_1/dropout_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/dropout_1/random_uniform"
  op: "Add"
  input: "gru_1/dropout_1/random_uniform/mul"
  input: "gru_1/dropout_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/dropout_1/add"
  op: "Add"
  input: "gru_1/dropout_1/keep_prob"
  input: "gru_1/dropout_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/dropout_1/Floor"
  op: "Floor"
  input: "gru_1/dropout_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/dropout_1/div"
  op: "RealDiv"
  input: "gru_1/mul_2"
  input: "gru_1/dropout_1/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/dropout_1/mul"
  op: "Mul"
  input: "gru_1/dropout_1/div"
  input: "gru_1/dropout_1/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_1/ExpandDims_2"
  op: "ExpandDims"
  input: "gru_1/dropout_1/mul"
  input: "gru_1/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\224\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/Tile_2"
  op: "Tile"
  input: "gru_1/ExpandDims_2"
  input: "gru_1/stack_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/mul_3"
  op: "Mul"
  input: "gru_1_input"
  input: "gru_1/Tile_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/Reshape_4/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\r\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/Reshape_4"
  op: "Reshape"
  input: "gru_1_input"
  input: "gru_1/Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/MatMul_1"
  op: "MatMul"
  input: "gru_1/Reshape_4"
  input: "gru_1/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_1/BiasAdd_1"
  op: "BiasAdd"
  input: "gru_1/MatMul_1"
  input: "gru_1/strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_1/stack_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\224\000\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/Reshape_5"
  op: "Reshape"
  input: "gru_1/BiasAdd_1"
  input: "gru_1/stack_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/strided_slice_11/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_11/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_11/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_11"
  op: "StridedSlice"
  input: "gru_1_input"
  input: "gru_1/strided_slice_11/stack"
  input: "gru_1/strided_slice_11/stack_1"
  input: "gru_1/strided_slice_11/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "gru_1/Reshape_6/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\r\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/Reshape_6"
  op: "Reshape"
  input: "gru_1/strided_slice_11"
  input: "gru_1/Reshape_6/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/ones_like_2/Shape"
  op: "Shape"
  input: "gru_1/Reshape_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/ones_like_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_1/ones_like_2"
  op: "Fill"
  input: "gru_1/ones_like_2/Shape"
  input: "gru_1/ones_like_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/mul_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_1/mul_4"
  op: "Mul"
  input: "gru_1/ones_like_2"
  input: "gru_1/mul_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/dropout_2/keep_prob"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "gru_1/dropout_2/Shape"
  op: "Shape"
  input: "gru_1/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/dropout_2/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru_1/dropout_2/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_1/dropout_2/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "gru_1/dropout_2/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5550305
    }
  }
}
node {
  name: "gru_1/dropout_2/random_uniform/sub"
  op: "Sub"
  input: "gru_1/dropout_2/random_uniform/max"
  input: "gru_1/dropout_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/dropout_2/random_uniform/mul"
  op: "Mul"
  input: "gru_1/dropout_2/random_uniform/RandomUniform"
  input: "gru_1/dropout_2/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/dropout_2/random_uniform"
  op: "Add"
  input: "gru_1/dropout_2/random_uniform/mul"
  input: "gru_1/dropout_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/dropout_2/add"
  op: "Add"
  input: "gru_1/dropout_2/keep_prob"
  input: "gru_1/dropout_2/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/dropout_2/Floor"
  op: "Floor"
  input: "gru_1/dropout_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/dropout_2/div"
  op: "RealDiv"
  input: "gru_1/mul_4"
  input: "gru_1/dropout_2/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/dropout_2/mul"
  op: "Mul"
  input: "gru_1/dropout_2/div"
  input: "gru_1/dropout_2/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_1/ExpandDims_3"
  op: "ExpandDims"
  input: "gru_1/dropout_2/mul"
  input: "gru_1/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/stack_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\224\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/Tile_3"
  op: "Tile"
  input: "gru_1/ExpandDims_3"
  input: "gru_1/stack_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/mul_5"
  op: "Mul"
  input: "gru_1_input"
  input: "gru_1/Tile_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/Reshape_7/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\r\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/Reshape_7"
  op: "Reshape"
  input: "gru_1_input"
  input: "gru_1/Reshape_7/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/MatMul_2"
  op: "MatMul"
  input: "gru_1/Reshape_7"
  input: "gru_1/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_1/BiasAdd_2"
  op: "BiasAdd"
  input: "gru_1/MatMul_2"
  input: "gru_1/strided_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru_1/stack_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\377\377\377\377\224\000\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/Reshape_8"
  op: "Reshape"
  input: "gru_1/BiasAdd_2"
  input: "gru_1/stack_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gru_1/concat"
  op: "ConcatV2"
  input: "gru_1/Reshape_2"
  input: "gru_1/Reshape_5"
  input: "gru_1/Reshape_8"
  input: "gru_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/transpose"
  op: "Transpose"
  input: "gru_1/concat"
  input: "gru_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/Shape"
  op: "Shape"
  input: "gru_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/strided_slice_12/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_12/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_12/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_12"
  op: "StridedSlice"
  input: "gru_1/Shape"
  input: "gru_1/strided_slice_12/stack"
  input: "gru_1/strided_slice_12/stack_1"
  input: "gru_1/strided_slice_12/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gru_1/strided_slice_13/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_13/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_13/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_13"
  op: "StridedSlice"
  input: "gru_1/transpose"
  input: "gru_1/strided_slice_13/stack"
  input: "gru_1/strided_slice_13/stack_1"
  input: "gru_1/strided_slice_13/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gru_1/strided_slice_14/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_14/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_14/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_14"
  op: "StridedSlice"
  input: "gru_1/strided_slice_13"
  input: "gru_1/strided_slice_14/stack"
  input: "gru_1/strided_slice_14/stack_1"
  input: "gru_1/strided_slice_14/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gru_1/strided_slice_15/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_15/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_15/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_15"
  op: "StridedSlice"
  input: "gru_1/strided_slice_13"
  input: "gru_1/strided_slice_15/stack"
  input: "gru_1/strided_slice_15/stack_1"
  input: "gru_1/strided_slice_15/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gru_1/strided_slice_16/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_16/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_16/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/strided_slice_16"
  op: "StridedSlice"
  input: "gru_1/strided_slice_13"
  input: "gru_1/strided_slice_16/stack"
  input: "gru_1/strided_slice_16/stack_1"
  input: "gru_1/strided_slice_16/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gru_1/mul_6/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_1/mul_6"
  op: "Mul"
  input: "gru_1/Tile"
  input: "gru_1/mul_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/MatMul_3"
  op: "MatMul"
  input: "gru_1/mul_6"
  input: "gru_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_1/add"
  op: "Add"
  input: "gru_1/strided_slice_14"
  input: "gru_1/MatMul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/mul_7/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gru_1/mul_7"
  op: "Mul"
  input: "gru_1/mul_7/x"
  input: "gru_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/add_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "gru_1/add_1"
  op: "Add"
  input: "gru_1/mul_7"
  input: "gru_1/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_1/clip_by_value/Minimum"
  op: "Minimum"
  input: "gru_1/add_1"
  input: "gru_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/clip_by_value"
  op: "Maximum"
  input: "gru_1/clip_by_value/Minimum"
  input: "gru_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/mul_8/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_1/mul_8"
  op: "Mul"
  input: "gru_1/Tile"
  input: "gru_1/mul_8/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/MatMul_4"
  op: "MatMul"
  input: "gru_1/mul_8"
  input: "gru_1/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_1/add_2"
  op: "Add"
  input: "gru_1/strided_slice_15"
  input: "gru_1/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/mul_9/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gru_1/mul_9"
  op: "Mul"
  input: "gru_1/mul_9/x"
  input: "gru_1/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/add_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "gru_1/add_3"
  op: "Add"
  input: "gru_1/mul_9"
  input: "gru_1/add_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_1/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "gru_1/add_3"
  input: "gru_1/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/clip_by_value_1"
  op: "Maximum"
  input: "gru_1/clip_by_value_1/Minimum"
  input: "gru_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/mul_10"
  op: "Mul"
  input: "gru_1/clip_by_value_1"
  input: "gru_1/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/mul_11/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_1/mul_11"
  op: "Mul"
  input: "gru_1/mul_10"
  input: "gru_1/mul_11/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/MatMul_5"
  op: "MatMul"
  input: "gru_1/mul_11"
  input: "gru_1/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_1/add_4"
  op: "Add"
  input: "gru_1/strided_slice_16"
  input: "gru_1/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/mul_12"
  op: "Mul"
  input: "gru_1/clip_by_value"
  input: "gru_1/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_1/sub"
  op: "Sub"
  input: "gru_1/sub/x"
  input: "gru_1/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/mul_13"
  op: "Mul"
  input: "gru_1/sub"
  input: "gru_1/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/add_5"
  op: "Add"
  input: "gru_1/mul_12"
  input: "gru_1/mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/TensorArray"
  op: "TensorArrayV3"
  input: "gru_1/strided_slice_12"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "output_ta"
    }
  }
}
node {
  name: "gru_1/TensorArray_1"
  op: "TensorArrayV3"
  input: "gru_1/strided_slice_12"
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "input_ta"
    }
  }
}
node {
  name: "gru_1/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "gru_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru_1/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_1/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_1/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "gru_1/TensorArrayUnstack/Shape"
  input: "gru_1/TensorArrayUnstack/strided_slice/stack"
  input: "gru_1/TensorArrayUnstack/strided_slice/stack_1"
  input: "gru_1/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gru_1/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru_1/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_1/TensorArrayUnstack/range"
  op: "Range"
  input: "gru_1/TensorArrayUnstack/range/start"
  input: "gru_1/TensorArrayUnstack/strided_slice"
  input: "gru_1/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gru_1/TensorArray_1"
  input: "gru_1/TensorArrayUnstack/range"
  input: "gru_1/transpose"
  input: "gru_1/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/transpose"
      }
    }
  }
}
node {
  name: "gru_1/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru_1/while/Enter"
  op: "Enter"
  input: "gru_1/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_1/while/Enter_1"
  op: "Enter"
  input: "gru_1/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_1/while/Enter_2"
  op: "Enter"
  input: "gru_1/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_1/while/Merge"
  op: "Merge"
  input: "gru_1/while/Enter"
  input: "gru_1/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/while/Merge_1"
  op: "Merge"
  input: "gru_1/while/Enter_1"
  input: "gru_1/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/while/Merge_2"
  op: "Merge"
  input: "gru_1/while/Enter_2"
  input: "gru_1/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/while/Less/Enter"
  op: "Enter"
  input: "gru_1/strided_slice_12"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_1/while/Less"
  op: "Less"
  input: "gru_1/while/Merge"
  input: "gru_1/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/while/LoopCond"
  op: "LoopCond"
  input: "gru_1/while/Less"
}
node {
  name: "gru_1/while/Switch"
  op: "Switch"
  input: "gru_1/while/Merge"
  input: "gru_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Merge"
      }
    }
  }
}
node {
  name: "gru_1/while/Switch_1"
  op: "Switch"
  input: "gru_1/while/Merge_1"
  input: "gru_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Merge_1"
      }
    }
  }
}
node {
  name: "gru_1/while/Switch_2"
  op: "Switch"
  input: "gru_1/while/Merge_2"
  input: "gru_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Merge_2"
      }
    }
  }
}
node {
  name: "gru_1/while/Identity"
  op: "Identity"
  input: "gru_1/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/while/Identity_1"
  op: "Identity"
  input: "gru_1/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/while/Identity_2"
  op: "Identity"
  input: "gru_1/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "gru_1/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_1/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "gru_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_1/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gru_1/while/TensorArrayReadV3/Enter"
  input: "gru_1/while/Identity"
  input: "gru_1/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/while/strided_slice/stack"
  op: "Const"
  input: "^gru_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/while/strided_slice/stack_1"
  op: "Const"
  input: "^gru_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/while/strided_slice/stack_2"
  op: "Const"
  input: "^gru_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/while/strided_slice"
  op: "StridedSlice"
  input: "gru_1/while/TensorArrayReadV3"
  input: "gru_1/while/strided_slice/stack"
  input: "gru_1/while/strided_slice/stack_1"
  input: "gru_1/while/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gru_1/while/strided_slice_1/stack"
  op: "Const"
  input: "^gru_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/while/strided_slice_1/stack_1"
  op: "Const"
  input: "^gru_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/while/strided_slice_1/stack_2"
  op: "Const"
  input: "^gru_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/while/strided_slice_1"
  op: "StridedSlice"
  input: "gru_1/while/TensorArrayReadV3"
  input: "gru_1/while/strided_slice_1/stack"
  input: "gru_1/while/strided_slice_1/stack_1"
  input: "gru_1/while/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gru_1/while/strided_slice_2/stack"
  op: "Const"
  input: "^gru_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/while/strided_slice_2/stack_1"
  op: "Const"
  input: "^gru_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/while/strided_slice_2/stack_2"
  op: "Const"
  input: "^gru_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/while/strided_slice_2"
  op: "StridedSlice"
  input: "gru_1/while/TensorArrayReadV3"
  input: "gru_1/while/strided_slice_2/stack"
  input: "gru_1/while/strided_slice_2/stack_1"
  input: "gru_1/while/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gru_1/while/mul/y"
  op: "Const"
  input: "^gru_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_1/while/mul"
  op: "Mul"
  input: "gru_1/while/Identity_2"
  input: "gru_1/while/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/while/MatMul/Enter"
  op: "Enter"
  input: "gru_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_1/while/MatMul"
  op: "MatMul"
  input: "gru_1/while/mul"
  input: "gru_1/while/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_1/while/add"
  op: "Add"
  input: "gru_1/while/strided_slice"
  input: "gru_1/while/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/while/mul_1/x"
  op: "Const"
  input: "^gru_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gru_1/while/mul_1"
  op: "Mul"
  input: "gru_1/while/mul_1/x"
  input: "gru_1/while/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/while/add_1/y"
  op: "Const"
  input: "^gru_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "gru_1/while/add_1"
  op: "Add"
  input: "gru_1/while/mul_1"
  input: "gru_1/while/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/while/Const"
  op: "Const"
  input: "^gru_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru_1/while/Const_1"
  op: "Const"
  input: "^gru_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_1/while/clip_by_value/Minimum"
  op: "Minimum"
  input: "gru_1/while/add_1"
  input: "gru_1/while/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/while/clip_by_value"
  op: "Maximum"
  input: "gru_1/while/clip_by_value/Minimum"
  input: "gru_1/while/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/while/mul_2/y"
  op: "Const"
  input: "^gru_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_1/while/mul_2"
  op: "Mul"
  input: "gru_1/while/Identity_2"
  input: "gru_1/while/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/while/MatMul_1/Enter"
  op: "Enter"
  input: "gru_1/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_1/while/MatMul_1"
  op: "MatMul"
  input: "gru_1/while/mul_2"
  input: "gru_1/while/MatMul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_1/while/add_2"
  op: "Add"
  input: "gru_1/while/strided_slice_1"
  input: "gru_1/while/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/while/mul_3/x"
  op: "Const"
  input: "^gru_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gru_1/while/mul_3"
  op: "Mul"
  input: "gru_1/while/mul_3/x"
  input: "gru_1/while/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/while/add_3/y"
  op: "Const"
  input: "^gru_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "gru_1/while/add_3"
  op: "Add"
  input: "gru_1/while/mul_3"
  input: "gru_1/while/add_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/while/Const_2"
  op: "Const"
  input: "^gru_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru_1/while/Const_3"
  op: "Const"
  input: "^gru_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_1/while/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "gru_1/while/add_3"
  input: "gru_1/while/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/while/clip_by_value_1"
  op: "Maximum"
  input: "gru_1/while/clip_by_value_1/Minimum"
  input: "gru_1/while/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/while/mul_4"
  op: "Mul"
  input: "gru_1/while/clip_by_value_1"
  input: "gru_1/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/while/mul_5/y"
  op: "Const"
  input: "^gru_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_1/while/mul_5"
  op: "Mul"
  input: "gru_1/while/mul_4"
  input: "gru_1/while/mul_5/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/while/MatMul_2/Enter"
  op: "Enter"
  input: "gru_1/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_1/while/MatMul_2"
  op: "MatMul"
  input: "gru_1/while/mul_5"
  input: "gru_1/while/MatMul_2/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru_1/while/add_4"
  op: "Add"
  input: "gru_1/while/strided_slice_2"
  input: "gru_1/while/MatMul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/while/mul_6"
  op: "Mul"
  input: "gru_1/while/clip_by_value"
  input: "gru_1/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/while/sub/x"
  op: "Const"
  input: "^gru_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru_1/while/sub"
  op: "Sub"
  input: "gru_1/while/sub/x"
  input: "gru_1/while/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/while/mul_7"
  op: "Mul"
  input: "gru_1/while/sub"
  input: "gru_1/while/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/while/add_5"
  op: "Add"
  input: "gru_1/while/mul_6"
  input: "gru_1/while/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "gru_1/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_5"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru_1/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gru_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "gru_1/while/Identity"
  input: "gru_1/while/add_5"
  input: "gru_1/while/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_5"
      }
    }
  }
}
node {
  name: "gru_1/while/add_6/y"
  op: "Const"
  input: "^gru_1/while/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_1/while/add_6"
  op: "Add"
  input: "gru_1/while/Identity"
  input: "gru_1/while/add_6/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/while/NextIteration"
  op: "NextIteration"
  input: "gru_1/while/add_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/while/NextIteration_1"
  op: "NextIteration"
  input: "gru_1/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/while/NextIteration_2"
  op: "NextIteration"
  input: "gru_1/while/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/while/Exit"
  op: "Exit"
  input: "gru_1/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/while/Exit_1"
  op: "Exit"
  input: "gru_1/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/while/Exit_2"
  op: "Exit"
  input: "gru_1/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "gru_1/TensorArray"
  input: "gru_1/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/TensorArray"
      }
    }
  }
}
node {
  name: "gru_1/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru_1/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_1/TensorArrayStack/range"
  op: "Range"
  input: "gru_1/TensorArrayStack/range/start"
  input: "gru_1/TensorArrayStack/TensorArraySizeV3"
  input: "gru_1/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/TensorArray"
      }
    }
  }
}
node {
  name: "gru_1/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gru_1/TensorArray"
  input: "gru_1/TensorArrayStack/range"
  input: "gru_1/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/TensorArray"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 20
        }
      }
    }
  }
}
node {
  name: "gru_1/sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru_1/sub_1"
  op: "Sub"
  input: "gru_1/while/Exit"
  input: "gru_1/sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru_1/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gru_1/TensorArray"
  input: "gru_1/sub_1"
  input: "gru_1/while/Exit_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru_1/transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gru_1/transpose_1"
  op: "Transpose"
  input: "gru_1/TensorArrayStack/TensorArrayGatherV3"
  input: "gru_1/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.5345224738121033
      }
    }
  }
}
node {
  name: "dense_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5345224738121033
      }
    }
  }
}
node {
  name: "dense_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6009459
    }
  }
}
node {
  name: "dense_1/random_uniform/sub"
  op: "Sub"
  input: "dense_1/random_uniform/max"
  input: "dense_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/random_uniform/mul"
  op: "Mul"
  input: "dense_1/random_uniform/RandomUniform"
  input: "dense_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/random_uniform"
  op: "Add"
  input: "dense_1/random_uniform/mul"
  input: "dense_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense_1/kernel/Assign"
  op: "Assign"
  input: "dense_1/kernel"
  input: "dense_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense_1/kernel/read"
  op: "Identity"
  input: "dense_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
}
node {
  name: "dense_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense_1/bias/Assign"
  op: "Assign"
  input: "dense_1/bias"
  input: "dense_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense_1/bias/read"
  op: "Identity"
  input: "dense_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
}
node {
  name: "dense_1/MatMul"
  op: "MatMul"
  input: "gru_1/TensorArrayReadV3"
  input: "dense_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_1/BiasAdd"
  op: "BiasAdd"
  input: "dense_1/MatMul"
  input: "dense_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_1/Sigmoid"
  op: "Sigmoid"
  input: "dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 13
        }
        dim {
          size: 60
        }
      }
    }
  }
}
node {
  name: "Assign"
  op: "Assign"
  input: "gru_1/kernel"
  input: "Placeholder"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 60
        }
      }
    }
  }
}
node {
  name: "Assign_1"
  op: "Assign"
  input: "gru_1/recurrent_kernel"
  input: "Placeholder_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 60
        }
      }
    }
  }
}
node {
  name: "Assign_2"
  op: "Assign"
  input: "gru_1/bias"
  input: "Placeholder_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_3"
  op: "Assign"
  input: "dense_1/kernel"
  input: "Placeholder_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_4"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_4"
  op: "Assign"
  input: "dense_1/bias"
  input: "Placeholder_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^gru_1/kernel/Assign"
  input: "^gru_1/recurrent_kernel/Assign"
  input: "^gru_1/bias/Assign"
  input: "^dense_1/kernel/Assign"
  input: "^dense_1/bias/Assign"
}
node {
  name: "lr/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "lr"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "lr/Assign"
  op: "Assign"
  input: "lr"
  input: "lr/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lr"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "lr/read"
  op: "Identity"
  input: "lr"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@lr"
      }
    }
  }
}
node {
  name: "rho/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "rho"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rho/Assign"
  op: "Assign"
  input: "rho"
  input: "rho/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rho"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rho/read"
  op: "Identity"
  input: "rho"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rho"
      }
    }
  }
}
node {
  name: "decay/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decay"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "decay/Assign"
  op: "Assign"
  input: "decay"
  input: "decay/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decay"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "decay/read"
  op: "Identity"
  input: "decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decay"
      }
    }
  }
}
node {
  name: "iterations/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "iterations"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "iterations/Assign"
  op: "Assign"
  input: "iterations"
  input: "iterations/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@iterations"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "iterations/read"
  op: "Identity"
  input: "iterations"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@iterations"
      }
    }
  }
}
node {
  name: "dense_1_sample_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "dense_1_target"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "sub"
  op: "Sub"
  input: "dense_1/Sigmoid"
  input: "dense_1_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square"
  op: "Square"
  input: "sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "Square"
  input: "Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Mean_1"
  op: "Mean"
  input: "Mean"
  input: "Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "Mean_1"
  input: "dense_1_sample_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "NotEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "NotEqual"
  op: "NotEqual"
  input: "dense_1_sample_weights"
  input: "NotEqual/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_2"
  op: "Mean"
  input: "Cast"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "truediv"
  op: "RealDiv"
  input: "mul"
  input: "Mean_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_3"
  op: "Mean"
  input: "truediv"
  input: "Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mul_1"
  op: "Mul"
  input: "mul_1/x"
  input: "Mean_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Round"
  op: "Round"
  input: "dense_1/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Equal"
  op: "Equal"
  input: "dense_1_target"
  input: "Round"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Cast_1"
  op: "Cast"
  input: "Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Mean_4/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Mean_4"
  op: "Mean"
  input: "Cast_1"
  input: "Mean_4/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_5"
  op: "Mean"
  input: "Mean_4"
  input: "Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul_1"
      }
    }
  }
}
node {
  name: "gradients/f_count"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Exit_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_1"
  op: "Enter"
  input: "gradients/f_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Exit_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge"
  op: "Merge"
  input: "gradients/f_count_1"
  input: "gradients/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Exit_1"
      }
    }
  }
}
node {
  name: "gradients/Switch"
  op: "Switch"
  input: "gradients/Merge"
  input: "gru_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Exit_1"
      }
    }
  }
}
node {
  name: "gradients/Add/y"
  op: "Const"
  input: "^gru_1/while/Identity"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Exit_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add"
  op: "Add"
  input: "gradients/Switch:1"
  input: "gradients/Add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Exit_1"
      }
    }
  }
}
node {
  name: "gradients/NextIteration"
  op: "NextIteration"
  input: "gradients/Add"
  input: "^gradients/gru_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
  input: "^gradients/gru_1/while/add_5_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/gru_1/while/add_5_grad/BroadcastGradientArgs/StackPush_1"
  input: "^gradients/gru_1/while/mul_6_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/gru_1/while/mul_6_grad/BroadcastGradientArgs/StackPush_1"
  input: "^gradients/gru_1/while/mul_6_grad/mul/StackPush"
  input: "^gradients/gru_1/while/mul_6_grad/mul_1/StackPush"
  input: "^gradients/gru_1/while/mul_7_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/gru_1/while/mul_7_grad/BroadcastGradientArgs/StackPush_1"
  input: "^gradients/gru_1/while/mul_7_grad/mul/StackPush"
  input: "^gradients/gru_1/while/mul_7_grad/mul_1/StackPush"
  input: "^gradients/gru_1/while/sub_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/gru_1/while/add_4_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/gru_1/while/add_4_grad/BroadcastGradientArgs/StackPush_1"
  input: "^gradients/gru_1/while/clip_by_value_grad/GreaterEqual/StackPush"
  input: "^gradients/gru_1/while/clip_by_value_grad/GreaterEqual/StackPush_1"
  input: "^gradients/gru_1/while/clip_by_value_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/StackPush"
  input: "^gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/StackPush_1"
  input: "^gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/StackPush_2"
  input: "^gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/StackPush_3"
  input: "^gradients/gru_1/while/MatMul_2_grad/MatMul_1/StackPush"
  input: "^gradients/gru_1/while/clip_by_value/Minimum_grad/LessEqual/StackPush"
  input: "^gradients/gru_1/while/clip_by_value/Minimum_grad/LessEqual/StackPush_1"
  input: "^gradients/gru_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/gru_1/while/mul_5_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/gru_1/while/mul_5_grad/mul/StackPush"
  input: "^gradients/gru_1/while/mul_5_grad/mul_1/StackPush"
  input: "^gradients/gru_1/while/add_1_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/gru_1/while/mul_4_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/gru_1/while/mul_4_grad/BroadcastGradientArgs/StackPush_1"
  input: "^gradients/gru_1/while/mul_4_grad/mul_1/StackPush"
  input: "^gradients/gru_1/while/mul_1_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/gru_1/while/mul_1_grad/mul/StackPush"
  input: "^gradients/gru_1/while/mul_1_grad/mul_1/StackPush"
  input: "^gradients/gru_1/while/clip_by_value_1_grad/GreaterEqual/StackPush"
  input: "^gradients/gru_1/while/clip_by_value_1_grad/GreaterEqual/StackPush_1"
  input: "^gradients/gru_1/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/gru_1/while/add_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/gru_1/while/add_grad/BroadcastGradientArgs/StackPush_1"
  input: "^gradients/gru_1/while/clip_by_value_1/Minimum_grad/LessEqual/StackPush"
  input: "^gradients/gru_1/while/clip_by_value_1/Minimum_grad/LessEqual/StackPush_1"
  input: "^gradients/gru_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/StackPush"
  input: "^gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/StackPush_1"
  input: "^gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/StackPush_2"
  input: "^gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/StackPush_3"
  input: "^gradients/gru_1/while/MatMul_grad/MatMul_1/StackPush"
  input: "^gradients/gru_1/while/add_3_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/gru_1/while/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/gru_1/while/mul_grad/mul/StackPush"
  input: "^gradients/gru_1/while/mul_3_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/gru_1/while/mul_3_grad/mul/StackPush"
  input: "^gradients/gru_1/while/mul_3_grad/mul_1/StackPush"
  input: "^gradients/gru_1/while/add_2_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/gru_1/while/add_2_grad/BroadcastGradientArgs/StackPush_1"
  input: "^gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/StackPush"
  input: "^gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/StackPush_1"
  input: "^gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/StackPush_2"
  input: "^gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/StackPush_3"
  input: "^gradients/gru_1/while/MatMul_1_grad/MatMul_1/StackPush"
  input: "^gradients/gru_1/while/mul_2_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/gru_1/while/mul_2_grad/mul/StackPush"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Exit_1"
      }
    }
  }
}
node {
  name: "gradients/f_count_2"
  op: "Exit"
  input: "gradients/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Exit_1"
      }
    }
  }
}
node {
  name: "gradients/b_count"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Exit_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_1"
  op: "Enter"
  input: "gradients/f_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Exit_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_1"
  op: "Merge"
  input: "gradients/b_count_1"
  input: "gradients/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Exit_1"
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/b_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Exit_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/Merge_1"
  input: "gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Exit_1"
      }
    }
  }
}
node {
  name: "gradients/b_count_2"
  op: "LoopCond"
  input: "gradients/GreaterEqual"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Exit_1"
      }
    }
  }
}
node {
  name: "gradients/Switch_1"
  op: "Switch"
  input: "gradients/Merge_1"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Exit_1"
      }
    }
  }
}
node {
  name: "gradients/Sub"
  op: "Sub"
  input: "gradients/Switch_1:1"
  input: "gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Exit_1"
      }
    }
  }
}
node {
  name: "gradients/NextIteration_1"
  op: "NextIteration"
  input: "gradients/Sub"
  input: "^gradients/gru_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Exit_1"
      }
    }
  }
}
node {
  name: "gradients/b_count_3"
  op: "Exit"
  input: "gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Exit_1"
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_1_grad/Shape"
  input: "gradients/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul_1"
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/mul"
  op: "Mul"
  input: "gradients/Fill"
  input: "Mean_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul_1"
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/mul_1_grad/mul"
  input: "gradients/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_1_grad/Sum"
  input: "gradients/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul_1"
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/mul_1"
  op: "Mul"
  input: "mul_1/x"
  input: "gradients/Fill"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul_1"
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/mul_1_grad/mul_1"
  input: "gradients/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mul_1_grad/Sum_1"
  input: "gradients/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul_1"
      }
    }
  }
}
node {
  name: "gradients/Mean_3_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Mean_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_1_grad/Reshape_1"
  input: "gradients/Mean_3_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_3"
      }
    }
  }
}
node {
  name: "gradients/Mean_3_grad/Shape"
  op: "Shape"
  input: "truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_3"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_3_grad/Tile"
  op: "Tile"
  input: "gradients/Mean_3_grad/Reshape"
  input: "gradients/Mean_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_3"
      }
    }
  }
}
node {
  name: "gradients/Mean_3_grad/Shape_1"
  op: "Shape"
  input: "truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_3"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_3_grad/Shape_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Mean_3_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Mean_3_grad/Prod"
  op: "Prod"
  input: "gradients/Mean_3_grad/Shape_1"
  input: "gradients/Mean_3_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_3"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Mean_3_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Mean_3_grad/Prod_1"
  op: "Prod"
  input: "gradients/Mean_3_grad/Shape_2"
  input: "gradients/Mean_3_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_3"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Mean_3_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Mean_3_grad/Maximum"
  op: "Maximum"
  input: "gradients/Mean_3_grad/Prod_1"
  input: "gradients/Mean_3_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_3"
      }
    }
  }
}
node {
  name: "gradients/Mean_3_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Mean_3_grad/Prod"
  input: "gradients/Mean_3_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_3"
      }
    }
  }
}
node {
  name: "gradients/Mean_3_grad/Cast"
  op: "Cast"
  input: "gradients/Mean_3_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_3"
      }
    }
  }
}
node {
  name: "gradients/Mean_3_grad/truediv"
  op: "RealDiv"
  input: "gradients/Mean_3_grad/Tile"
  input: "gradients/Mean_3_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_3"
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/Shape"
  op: "Shape"
  input: "mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@truediv"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@truediv"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/truediv_grad/Shape"
  input: "gradients/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@truediv"
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/Mean_3_grad/truediv"
  input: "Mean_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@truediv"
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/Sum"
  op: "Sum"
  input: "gradients/truediv_grad/RealDiv"
  input: "gradients/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_grad/Sum"
  input: "gradients/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@truediv"
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/Neg"
  op: "Neg"
  input: "mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@truediv"
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/truediv_grad/Neg"
  input: "Mean_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@truediv"
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/truediv_grad/RealDiv_1"
  input: "Mean_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@truediv"
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/mul"
  op: "Mul"
  input: "gradients/Mean_3_grad/truediv"
  input: "gradients/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@truediv"
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/Sum_1"
  op: "Sum"
  input: "gradients/truediv_grad/mul"
  input: "gradients/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/truediv_grad/Sum_1"
  input: "gradients/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@truediv"
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Shape"
  op: "Shape"
  input: "Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_grad/Shape_1"
  op: "Shape"
  input: "dense_1_sample_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_grad/Shape"
  input: "gradients/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul"
      }
    }
  }
}
node {
  name: "gradients/mul_grad/mul"
  op: "Mul"
  input: "gradients/truediv_grad/Reshape"
  input: "dense_1_sample_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul"
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Sum"
  op: "Sum"
  input: "gradients/mul_grad/mul"
  input: "gradients/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_grad/Sum"
  input: "gradients/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul"
      }
    }
  }
}
node {
  name: "gradients/mul_grad/mul_1"
  op: "Mul"
  input: "Mean_1"
  input: "gradients/truediv_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul"
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/mul_grad/mul_1"
  input: "gradients/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mul_grad/Sum_1"
  input: "gradients/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mul"
      }
    }
  }
}
node {
  name: "gradients/Mean_1_grad/Shape"
  op: "Shape"
  input: "Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_1_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Mean_1_grad/add"
  op: "Add"
  input: "Mean_1/reduction_indices"
  input: "gradients/Mean_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
}
node {
  name: "gradients/Mean_1_grad/mod"
  op: "FloorMod"
  input: "gradients/Mean_1_grad/add"
  input: "gradients/Mean_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
}
node {
  name: "gradients/Mean_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Mean_1_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Mean_1_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Mean_1_grad/range"
  op: "Range"
  input: "gradients/Mean_1_grad/range/start"
  input: "gradients/Mean_1_grad/Size"
  input: "gradients/Mean_1_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
}
node {
  name: "gradients/Mean_1_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Mean_1_grad/Fill"
  op: "Fill"
  input: "gradients/Mean_1_grad/Shape_1"
  input: "gradients/Mean_1_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
}
node {
  name: "gradients/Mean_1_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/Mean_1_grad/range"
  input: "gradients/Mean_1_grad/mod"
  input: "gradients/Mean_1_grad/Shape"
  input: "gradients/Mean_1_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
}
node {
  name: "gradients/Mean_1_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Mean_1_grad/Maximum"
  op: "Maximum"
  input: "gradients/Mean_1_grad/DynamicStitch"
  input: "gradients/Mean_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
}
node {
  name: "gradients/Mean_1_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Mean_1_grad/Shape"
  input: "gradients/Mean_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
}
node {
  name: "gradients/Mean_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_grad/Reshape"
  input: "gradients/Mean_1_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
}
node {
  name: "gradients/Mean_1_grad/Tile"
  op: "Tile"
  input: "gradients/Mean_1_grad/Reshape"
  input: "gradients/Mean_1_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
}
node {
  name: "gradients/Mean_1_grad/Shape_2"
  op: "Shape"
  input: "Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_1_grad/Shape_3"
  op: "Shape"
  input: "Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_1_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Mean_1_grad/Prod"
  op: "Prod"
  input: "gradients/Mean_1_grad/Shape_2"
  input: "gradients/Mean_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Mean_1_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Mean_1_grad/Prod_1"
  op: "Prod"
  input: "gradients/Mean_1_grad/Shape_3"
  input: "gradients/Mean_1_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Mean_1_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Mean_1_grad/Maximum_1"
  op: "Maximum"
  input: "gradients/Mean_1_grad/Prod_1"
  input: "gradients/Mean_1_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
}
node {
  name: "gradients/Mean_1_grad/floordiv_1"
  op: "FloorDiv"
  input: "gradients/Mean_1_grad/Prod"
  input: "gradients/Mean_1_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
}
node {
  name: "gradients/Mean_1_grad/Cast"
  op: "Cast"
  input: "gradients/Mean_1_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
}
node {
  name: "gradients/Mean_1_grad/truediv"
  op: "RealDiv"
  input: "gradients/Mean_1_grad/Tile"
  input: "gradients/Mean_1_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean_1"
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Shape"
  op: "Shape"
  input: "Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/add"
  op: "Add"
  input: "Mean/reduction_indices"
  input: "gradients/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/mod"
  op: "FloorMod"
  input: "gradients/Mean_grad/add"
  input: "gradients/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/range"
  op: "Range"
  input: "gradients/Mean_grad/range/start"
  input: "gradients/Mean_grad/Size"
  input: "gradients/Mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Fill"
  op: "Fill"
  input: "gradients/Mean_grad/Shape_1"
  input: "gradients/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/Mean_grad/range"
  input: "gradients/Mean_grad/mod"
  input: "gradients/Mean_grad/Shape"
  input: "gradients/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/Mean_grad/DynamicStitch"
  input: "gradients/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Mean_grad/Shape"
  input: "gradients/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Mean_1_grad/truediv"
  input: "gradients/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/Mean_grad/Reshape"
  input: "gradients/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Shape_2"
  op: "Shape"
  input: "Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Shape_3"
  op: "Shape"
  input: "Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/Mean_grad/Shape_2"
  input: "gradients/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/Mean_grad/Shape_3"
  input: "gradients/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Maximum_1"
  op: "Maximum"
  input: "gradients/Mean_grad/Prod_1"
  input: "gradients/Mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "gradients/Mean_grad/Prod"
  input: "gradients/Mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/Mean_grad/Tile"
  input: "gradients/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Mean"
      }
    }
  }
}
node {
  name: "gradients/Square_grad/mul/x"
  op: "Const"
  input: "^gradients/Mean_grad/truediv"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Square"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/Square_grad/mul"
  op: "Mul"
  input: "gradients/Square_grad/mul/x"
  input: "sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Square"
      }
    }
  }
}
node {
  name: "gradients/Square_grad/mul_1"
  op: "Mul"
  input: "gradients/Mean_grad/truediv"
  input: "gradients/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Square"
      }
    }
  }
}
node {
  name: "gradients/sub_grad/Shape"
  op: "Shape"
  input: "dense_1/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sub"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_grad/Shape_1"
  op: "Shape"
  input: "dense_1_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sub"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sub_grad/Shape"
  input: "gradients/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sub"
      }
    }
  }
}
node {
  name: "gradients/sub_grad/Sum"
  op: "Sum"
  input: "gradients/Square_grad/mul_1"
  input: "gradients/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/sub_grad/Sum"
  input: "gradients/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sub"
      }
    }
  }
}
node {
  name: "gradients/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/Square_grad/mul_1"
  input: "gradients/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_grad/Neg"
  op: "Neg"
  input: "gradients/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sub"
      }
    }
  }
}
node {
  name: "gradients/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sub_grad/Neg"
  input: "gradients/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sub"
      }
    }
  }
}
node {
  name: "gradients/dense_1/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "dense_1/Sigmoid"
  input: "gradients/sub_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/Sigmoid"
      }
    }
  }
}
node {
  name: "gradients/dense_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/dense_1/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/dense_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/dense_1/Sigmoid_grad/SigmoidGrad"
  input: "dense_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/dense_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gru_1/TensorArrayReadV3"
  input: "gradients/dense_1/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gru_1/TensorArray"
  input: "gru_1/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/TensorArray"
        s: "loc:@gru_1/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/gru_1/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gru_1/while/Exit_1"
  input: "^gradients/gru_1/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/TensorArray"
        s: "loc:@gru_1/TensorArrayReadV3"
      }
    }
  }
}
node {
  name: "gradients/gru_1/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gradients/gru_1/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gru_1/sub_1"
  input: "gradients/dense_1/MatMul_grad/MatMul"
  input: "gradients/gru_1/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/TensorArrayReadV3"
      }
    }
  }
}
node {
  name: "gradients/zeros_like"
  op: "ZerosLike"
  input: "gru_1/while/Exit_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_1/while/Exit_1_grad/b_exit"
  op: "Enter"
  input: "gradients/gru_1/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Exit_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Exit_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/Switch_1_grad/b_switch"
  op: "Merge"
  input: "gradients/gru_1/while/Exit_1_grad/b_exit"
  input: "gradients/gru_1/while/Switch_1_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Merge_1"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "gradients/gru_1/while/Exit_2_grad/b_exit"
  input: "gradients/gru_1/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Merge_2"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/Merge_1_grad/Switch"
  op: "Switch"
  input: "gradients/gru_1/while/Switch_1_grad/b_switch"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Merge_1"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "gradients/gru_1/while/Switch_2_grad/b_switch"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Merge_2"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/Enter_1_grad/Exit"
  op: "Exit"
  input: "gradients/gru_1/while/Merge_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Enter_1"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "gradients/gru_1/while/Merge_2_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Enter_2"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gru_1/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_5"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/gru_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/gru_1/while/Merge_1_grad/Switch:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_5"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/gru_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/gru_1/while/Merge_1_grad/Switch:1"
  input: "^gradients/gru_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_5"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Identity"
        s: "loc:@gru_1/while/add_5"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Identity"
        s: "loc:@gru_1/while/add_5"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
  input: "gru_1/while/Identity"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Identity"
        s: "loc:@gru_1/while/add_5"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Identity"
        s: "loc:@gru_1/while/add_5"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Identity"
        s: "loc:@gru_1/while/add_5"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^gradients/gru_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "^gradients/gru_1/while/add_5_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/gru_1/while/add_5_grad/BroadcastGradientArgs/StackPop_1"
  input: "^gradients/gru_1/while/mul_6_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/gru_1/while/mul_6_grad/BroadcastGradientArgs/StackPop_1"
  input: "^gradients/gru_1/while/mul_6_grad/mul/StackPop"
  input: "^gradients/gru_1/while/mul_6_grad/mul_1/StackPop"
  input: "^gradients/gru_1/while/mul_7_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/gru_1/while/mul_7_grad/BroadcastGradientArgs/StackPop_1"
  input: "^gradients/gru_1/while/mul_7_grad/mul/StackPop"
  input: "^gradients/gru_1/while/mul_7_grad/mul_1/StackPop"
  input: "^gradients/gru_1/while/sub_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/gru_1/while/add_4_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/gru_1/while/add_4_grad/BroadcastGradientArgs/StackPop_1"
  input: "^gradients/gru_1/while/clip_by_value_grad/GreaterEqual/StackPop"
  input: "^gradients/gru_1/while/clip_by_value_grad/GreaterEqual/StackPop_1"
  input: "^gradients/gru_1/while/clip_by_value_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/StackPop"
  input: "^gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/StackPop_1"
  input: "^gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/StackPop_2"
  input: "^gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/StackPop_3"
  input: "^gradients/gru_1/while/MatMul_2_grad/MatMul_1/StackPop"
  input: "^gradients/gru_1/while/clip_by_value/Minimum_grad/LessEqual/StackPop"
  input: "^gradients/gru_1/while/clip_by_value/Minimum_grad/LessEqual/StackPop_1"
  input: "^gradients/gru_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/gru_1/while/mul_5_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/gru_1/while/mul_5_grad/mul/StackPop"
  input: "^gradients/gru_1/while/mul_5_grad/mul_1/StackPop"
  input: "^gradients/gru_1/while/add_1_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/gru_1/while/mul_4_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/gru_1/while/mul_4_grad/BroadcastGradientArgs/StackPop_1"
  input: "^gradients/gru_1/while/mul_4_grad/mul_1/StackPop"
  input: "^gradients/gru_1/while/mul_1_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/gru_1/while/mul_1_grad/mul/StackPop"
  input: "^gradients/gru_1/while/mul_1_grad/mul_1/StackPop"
  input: "^gradients/gru_1/while/clip_by_value_1_grad/GreaterEqual/StackPop"
  input: "^gradients/gru_1/while/clip_by_value_1_grad/GreaterEqual/StackPop_1"
  input: "^gradients/gru_1/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/gru_1/while/add_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/gru_1/while/add_grad/BroadcastGradientArgs/StackPop_1"
  input: "^gradients/gru_1/while/clip_by_value_1/Minimum_grad/LessEqual/StackPop"
  input: "^gradients/gru_1/while/clip_by_value_1/Minimum_grad/LessEqual/StackPop_1"
  input: "^gradients/gru_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/StackPop"
  input: "^gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/StackPop_1"
  input: "^gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/StackPop_2"
  input: "^gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/StackPop_3"
  input: "^gradients/gru_1/while/MatMul_grad/MatMul_1/StackPop"
  input: "^gradients/gru_1/while/add_3_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/gru_1/while/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/gru_1/while/mul_grad/mul/StackPop"
  input: "^gradients/gru_1/while/mul_3_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/gru_1/while/mul_3_grad/mul/StackPop"
  input: "^gradients/gru_1/while/mul_3_grad/mul_1/StackPop"
  input: "^gradients/gru_1/while/add_2_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/gru_1/while/add_2_grad/BroadcastGradientArgs/StackPop_1"
  input: "^gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/StackPop"
  input: "^gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/StackPop_1"
  input: "^gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/StackPop_2"
  input: "^gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/StackPop_3"
  input: "^gradients/gru_1/while/MatMul_1_grad/MatMul_1/StackPop"
  input: "^gradients/gru_1/while/mul_2_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/gru_1/while/mul_2_grad/mul/StackPop"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_5"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gradients/gru_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/gru_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "gradients/gru_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/gru_1/while/Merge_2_grad/Switch:1"
  input: "gradients/gru_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Merge_2"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/add_5_grad/Shape"
  op: "Shape"
  input: "gru_1/while/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_5"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_5_grad/Shape_1"
  op: "Shape"
  input: "gru_1/while/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_5"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_5_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_5"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/add_5_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/add_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_5"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_5_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/add_5_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/gru_1/while/add_5_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_5"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/add_5_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/add_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_5"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_5_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/add_5_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_5"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_5_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_5"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/add_5_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "gradients/gru_1/while/add_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_5"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_5_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "gradients/gru_1/while/add_5_grad/BroadcastGradientArgs/RefEnter_1"
  input: "gradients/gru_1/while/add_5_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_5"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/add_5_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/add_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_5"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_5_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "gradients/gru_1/while/add_5_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_5"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_1/while/add_5_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/gru_1/while/add_5_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_5"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/add_5_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/gru_1/while/add_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_5"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/add_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_1/while/add_5_grad/Sum"
  input: "gradients/gru_1/while/add_5_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_5"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/add_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/gru_1/while/add_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_5"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/add_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_1/while/add_5_grad/Sum_1"
  input: "gradients/gru_1/while/add_5_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_5"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_6_grad/Shape"
  op: "Shape"
  input: "gru_1/while/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_6_grad/Shape_1"
  op: "Shape"
  input: "gru_1/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_6_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_6_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_6_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_6_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/mul_6_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/gru_1/while/mul_6_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_6_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_6_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_6_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/mul_6_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_6_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_6_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_6_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_6_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "gradients/gru_1/while/mul_6_grad/BroadcastGradientArgs/RefEnter_1"
  input: "gradients/gru_1/while/mul_6_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_6_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_6_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_6_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "gradients/gru_1/while/mul_6_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_1/while/mul_6_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/gru_1/while/mul_6_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_6_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Identity_2"
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_6_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_6_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Identity_2"
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_6_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/mul_6_grad/mul/RefEnter"
  input: "gru_1/while/Identity_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Identity_2"
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_6_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_6_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Identity_2"
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_6_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/mul_6_grad/mul/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Identity_2"
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_6_grad/mul"
  op: "Mul"
  input: "gradients/gru_1/while/add_5_grad/Reshape"
  input: "gradients/gru_1/while/mul_6_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_6_grad/Sum"
  op: "Sum"
  input: "gradients/gru_1/while/mul_6_grad/mul"
  input: "gradients/gru_1/while/mul_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_1/while/mul_6_grad/Sum"
  input: "gradients/gru_1/while/mul_6_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_6_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value"
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_6_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_6_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value"
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_6_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/mul_6_grad/mul_1/RefEnter"
  input: "gru_1/while/clip_by_value"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value"
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_6_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_6_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value"
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_6_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/mul_6_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value"
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_6_grad/mul_1"
  op: "Mul"
  input: "gradients/gru_1/while/mul_6_grad/mul_1/StackPop"
  input: "gradients/gru_1/while/add_5_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_6_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_1/while/mul_6_grad/mul_1"
  input: "gradients/gru_1/while/mul_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_6_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_1/while/mul_6_grad/Sum_1"
  input: "gradients/gru_1/while/mul_6_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_7_grad/Shape"
  op: "Shape"
  input: "gru_1/while/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_7"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_7_grad/Shape_1"
  op: "Shape"
  input: "gru_1/while/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_7"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_7_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_7"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_7_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_7_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_7"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_7_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/mul_7_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/gru_1/while/mul_7_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_7"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_7_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_7_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_7"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_7_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/mul_7_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_7"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_7_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_7"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_7_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_7_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_7"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_7_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "gradients/gru_1/while/mul_7_grad/BroadcastGradientArgs/RefEnter_1"
  input: "gradients/gru_1/while/mul_7_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_7"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_7_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_7_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_7"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_7_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "gradients/gru_1/while/mul_7_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_7"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_1/while/mul_7_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/gru_1/while/mul_7_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_7"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_7_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_4"
        s: "loc:@gru_1/while/mul_7"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_7_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_7_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_4"
        s: "loc:@gru_1/while/mul_7"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_7_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/mul_7_grad/mul/RefEnter"
  input: "gru_1/while/add_4"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_4"
        s: "loc:@gru_1/while/mul_7"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_7_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_7_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_4"
        s: "loc:@gru_1/while/mul_7"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_7_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/mul_7_grad/mul/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_4"
        s: "loc:@gru_1/while/mul_7"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_7_grad/mul"
  op: "Mul"
  input: "gradients/gru_1/while/add_5_grad/Reshape_1"
  input: "gradients/gru_1/while/mul_7_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_7"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_7_grad/Sum"
  op: "Sum"
  input: "gradients/gru_1/while/mul_7_grad/mul"
  input: "gradients/gru_1/while/mul_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_7"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_1/while/mul_7_grad/Sum"
  input: "gradients/gru_1/while/mul_7_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_7"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_7_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_7"
        s: "loc:@gru_1/while/sub"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_7_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_7_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_7"
        s: "loc:@gru_1/while/sub"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_7_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/mul_7_grad/mul_1/RefEnter"
  input: "gru_1/while/sub"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_7"
        s: "loc:@gru_1/while/sub"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_7_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_7_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_7"
        s: "loc:@gru_1/while/sub"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_7_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/mul_7_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_7"
        s: "loc:@gru_1/while/sub"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_7_grad/mul_1"
  op: "Mul"
  input: "gradients/gru_1/while/mul_7_grad/mul_1/StackPop"
  input: "gradients/gru_1/while/add_5_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_7"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_7_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_1/while/mul_7_grad/mul_1"
  input: "gradients/gru_1/while/mul_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_7"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_1/while/mul_7_grad/Sum_1"
  input: "gradients/gru_1/while/mul_7_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_7"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/Switch_1_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_1/while/Merge_1_grad/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Merge_1"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/sub_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/sub"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/sub_grad/Shape_1"
  op: "Shape"
  input: "gru_1/while/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/sub"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/sub_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/sub"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/sub_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/sub"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/sub_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/sub_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/gru_1/while/sub_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/sub"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/sub_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/sub"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/sub_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/sub_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/sub"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_1/while/sub_grad/Shape"
  input: "gradients/gru_1/while/sub_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/sub"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/sub_grad/Sum"
  op: "Sum"
  input: "gradients/gru_1/while/mul_7_grad/Reshape"
  input: "gradients/gru_1/while/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_1/while/sub_grad/Sum"
  input: "gradients/gru_1/while/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/sub"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_1/while/mul_7_grad/Reshape"
  input: "gradients/gru_1/while/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/sub"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/sub_grad/Neg"
  op: "Neg"
  input: "gradients/gru_1/while/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/sub"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_1/while/sub_grad/Neg"
  input: "gradients/gru_1/while/sub_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/sub"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/add_4_grad/Shape"
  op: "Shape"
  input: "gru_1/while/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_4"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_4_grad/Shape_1"
  op: "Shape"
  input: "gru_1/while/MatMul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_4"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_4_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/add_4_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/add_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_4"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_4_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/add_4_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/gru_1/while/add_4_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_4"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/add_4_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/add_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_4"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_4_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/add_4_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/add_4_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "gradients/gru_1/while/add_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_4"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_4_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "gradients/gru_1/while/add_4_grad/BroadcastGradientArgs/RefEnter_1"
  input: "gradients/gru_1/while/add_4_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_4"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/add_4_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/add_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_4"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_4_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "gradients/gru_1/while/add_4_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_1/while/add_4_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/gru_1/while/add_4_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_4"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/gru_1/while/mul_7_grad/Reshape_1"
  input: "gradients/gru_1/while/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_4"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_1/while/add_4_grad/Sum"
  input: "gradients/gru_1/while/add_4_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_4"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_1/while/mul_7_grad/Reshape_1"
  input: "gradients/gru_1/while/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_4"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_1/while/add_4_grad/Sum_1"
  input: "gradients/gru_1/while/add_4_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_4"
      }
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/gru_1/while/mul_6_grad/Reshape"
  input: "gradients/gru_1/while/sub_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_grad/Shape"
  op: "Shape"
  input: "gru_1/while/clip_by_value/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_grad/Shape_2"
  op: "Shape"
  input: "gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_grad/zeros"
  op: "Fill"
  input: "gradients/gru_1/while/clip_by_value_grad/Shape_2"
  input: "gradients/gru_1/while/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_grad/GreaterEqual/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value"
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_grad/GreaterEqual/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/clip_by_value_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value"
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_grad/GreaterEqual/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/clip_by_value_grad/GreaterEqual/RefEnter"
  input: "gru_1/while/clip_by_value/Minimum"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value"
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_grad/GreaterEqual/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/clip_by_value_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value"
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_grad/GreaterEqual/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/clip_by_value_grad/GreaterEqual/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value"
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_grad/GreaterEqual/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Const"
        s: "loc:@gru_1/while/clip_by_value"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_grad/GreaterEqual/RefEnter_1"
  op: "RefEnter"
  input: "gradients/gru_1/while/clip_by_value_grad/GreaterEqual/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Const"
        s: "loc:@gru_1/while/clip_by_value"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_grad/GreaterEqual/StackPush_1"
  op: "StackPush"
  input: "gradients/gru_1/while/clip_by_value_grad/GreaterEqual/RefEnter_1"
  input: "gru_1/while/Const"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Const"
        s: "loc:@gru_1/while/clip_by_value"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_grad/GreaterEqual/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/clip_by_value_grad/GreaterEqual/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Const"
        s: "loc:@gru_1/while/clip_by_value"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_grad/GreaterEqual/StackPop_1"
  op: "StackPop"
  input: "gradients/gru_1/while/clip_by_value_grad/GreaterEqual/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Const"
        s: "loc:@gru_1/while/clip_by_value"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/gru_1/while/clip_by_value_grad/GreaterEqual/StackPop"
  input: "gradients/gru_1/while/clip_by_value_grad/GreaterEqual/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/clip_by_value_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/gru_1/while/clip_by_value_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/clip_by_value_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_1/while/clip_by_value_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/gru_1/while/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_grad/Select"
  op: "Select"
  input: "gradients/gru_1/while/clip_by_value_grad/GreaterEqual"
  input: "gradients/AddN_1"
  input: "gradients/gru_1/while/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_grad/LogicalNot"
  op: "LogicalNot"
  input: "gradients/gru_1/while/clip_by_value_grad/GreaterEqual"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_grad/Select_1"
  op: "Select"
  input: "gradients/gru_1/while/clip_by_value_grad/LogicalNot"
  input: "gradients/AddN_1"
  input: "gradients/gru_1/while/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_grad/Sum"
  op: "Sum"
  input: "gradients/gru_1/while/clip_by_value_grad/Select"
  input: "gradients/gru_1/while/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_1/while/clip_by_value_grad/Sum"
  input: "gradients/gru_1/while/clip_by_value_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_1/while/clip_by_value_grad/Select_1"
  input: "gradients/gru_1/while/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_1/while/clip_by_value_grad/Sum_1"
  input: "gradients/gru_1/while/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_2_grad/Shape"
  op: "Shape"
  input: "gru_1/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_2"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/RefEnter"
  input: "gradients/gru_1/while/strided_slice_2_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_2"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_2"
        s: "loc:@gru_1/while/strided_slice_2/stack"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/RefEnter_1"
  op: "RefEnter"
  input: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_2"
        s: "loc:@gru_1/while/strided_slice_2/stack"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/StackPush_1"
  op: "StackPush"
  input: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/RefEnter_1"
  input: "gru_1/while/strided_slice_2/stack"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_2"
        s: "loc:@gru_1/while/strided_slice_2/stack"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_2"
        s: "loc:@gru_1/while/strided_slice_2/stack"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/StackPop_1"
  op: "StackPop"
  input: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_2"
        s: "loc:@gru_1/while/strided_slice_2/stack"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/f_acc_2"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_2"
        s: "loc:@gru_1/while/strided_slice_2/stack_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/RefEnter_2"
  op: "RefEnter"
  input: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_2"
        s: "loc:@gru_1/while/strided_slice_2/stack_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/StackPush_2"
  op: "StackPush"
  input: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/RefEnter_2"
  input: "gru_1/while/strided_slice_2/stack_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_2"
        s: "loc:@gru_1/while/strided_slice_2/stack_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/StackPop_2/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_2"
        s: "loc:@gru_1/while/strided_slice_2/stack_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/StackPop_2"
  op: "StackPop"
  input: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/StackPop_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_2"
        s: "loc:@gru_1/while/strided_slice_2/stack_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/f_acc_3"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_2"
        s: "loc:@gru_1/while/strided_slice_2/stack_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/RefEnter_3"
  op: "RefEnter"
  input: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/f_acc_3"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_2"
        s: "loc:@gru_1/while/strided_slice_2/stack_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/StackPush_3"
  op: "StackPush"
  input: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/RefEnter_3"
  input: "gru_1/while/strided_slice_2/stack_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_2"
        s: "loc:@gru_1/while/strided_slice_2/stack_2"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/StackPop_3/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/f_acc_3"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_2"
        s: "loc:@gru_1/while/strided_slice_2/stack_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/StackPop_3"
  op: "StackPop"
  input: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/StackPop_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_2"
        s: "loc:@gru_1/while/strided_slice_2/stack_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/StackPop"
  input: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/StackPop_1"
  input: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/StackPop_2"
  input: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad/StackPop_3"
  input: "gradients/gru_1/while/add_4_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_2"
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_2_grad/MatMul/Enter"
  op: "Enter"
  input: "gru_1/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_2_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_1/while/add_4_grad/Reshape_1"
  input: "gradients/gru_1/while/MatMul_2_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul_2"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_2_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul_2"
        s: "loc:@gru_1/while/mul_5"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_2_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul_2"
        s: "loc:@gru_1/while/mul_5"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_2_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/MatMul_2_grad/MatMul_1/RefEnter"
  input: "gru_1/while/mul_5"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul_2"
        s: "loc:@gru_1/while/mul_5"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_2_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul_2"
        s: "loc:@gru_1/while/mul_5"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_2_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/MatMul_2_grad/MatMul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul_2"
        s: "loc:@gru_1/while/mul_5"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_2_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_1/while/MatMul_2_grad/MatMul_1/StackPop"
  input: "gradients/gru_1/while/add_4_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul_2"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value/Minimum_grad/Shape"
  op: "Shape"
  input: "gru_1/while/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/gru_1/while/clip_by_value_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/Shape_2"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value/Minimum_grad/LessEqual/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_1"
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value/Minimum_grad/LessEqual/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_1"
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value/Minimum_grad/LessEqual/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/LessEqual/RefEnter"
  input: "gru_1/while/add_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_1"
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value/Minimum_grad/LessEqual/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_1"
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value/Minimum_grad/LessEqual/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/LessEqual/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_1"
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value/Minimum_grad/LessEqual/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Const_1"
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value/Minimum_grad/LessEqual/RefEnter_1"
  op: "RefEnter"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/LessEqual/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Const_1"
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value/Minimum_grad/LessEqual/StackPush_1"
  op: "StackPush"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/LessEqual/RefEnter_1"
  input: "gru_1/while/Const_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Const_1"
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value/Minimum_grad/LessEqual/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/LessEqual/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Const_1"
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value/Minimum_grad/LessEqual/StackPop_1"
  op: "StackPop"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/LessEqual/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Const_1"
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/LessEqual/StackPop"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/LessEqual/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/gru_1/while/clip_by_value_grad/Reshape"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value/Minimum_grad/LogicalNot"
  op: "LogicalNot"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/LessEqual"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/LogicalNot"
  input: "gradients/gru_1/while/clip_by_value_grad/Reshape"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/Select"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/Sum"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/Select_1"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/Sum_1"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value/Minimum"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_5_grad/Shape"
  op: "Shape"
  input: "gru_1/while/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_5"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_5_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_5_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_5"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_5_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_5"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_5_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/mul_5_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/gru_1/while/mul_5_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_5"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_5_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_5"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_5_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/mul_5_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_5"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_1/while/mul_5_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/gru_1/while/mul_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_5"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_5_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_5"
        s: "loc:@gru_1/while/mul_5/y"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_5_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_5_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_5"
        s: "loc:@gru_1/while/mul_5/y"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_5_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/mul_5_grad/mul/RefEnter"
  input: "gru_1/while/mul_5/y"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_5"
        s: "loc:@gru_1/while/mul_5/y"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_5_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_5_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_5"
        s: "loc:@gru_1/while/mul_5/y"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_5_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/mul_5_grad/mul/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_5"
        s: "loc:@gru_1/while/mul_5/y"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_5_grad/mul"
  op: "Mul"
  input: "gradients/gru_1/while/MatMul_2_grad/MatMul"
  input: "gradients/gru_1/while/mul_5_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_5"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_5_grad/Sum"
  op: "Sum"
  input: "gradients/gru_1/while/mul_5_grad/mul"
  input: "gradients/gru_1/while/mul_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_5"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_1/while/mul_5_grad/Sum"
  input: "gradients/gru_1/while/mul_5_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_5"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_5_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_4"
        s: "loc:@gru_1/while/mul_5"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_5_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_5_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_4"
        s: "loc:@gru_1/while/mul_5"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_5_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/mul_5_grad/mul_1/RefEnter"
  input: "gru_1/while/mul_4"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_4"
        s: "loc:@gru_1/while/mul_5"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_5_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_5_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_4"
        s: "loc:@gru_1/while/mul_5"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_5_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/mul_5_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_4"
        s: "loc:@gru_1/while/mul_5"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_5_grad/mul_1"
  op: "Mul"
  input: "gradients/gru_1/while/mul_5_grad/mul_1/StackPop"
  input: "gradients/gru_1/while/MatMul_2_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_5"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_1/while/mul_5_grad/mul_1"
  input: "gradients/gru_1/while/mul_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_5"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_1/while/mul_5_grad/Sum_1"
  input: "gradients/gru_1/while/mul_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_5"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_2/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul_2/Enter"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20
          }
          dim {
            size: 20
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_2/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_1/while/MatMul_2/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul_2/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_2/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_1/while/MatMul_2/Enter_grad/b_acc_1"
  input: "gradients/gru_1/while/MatMul_2/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul_2/Enter"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_2/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_1/while/MatMul_2/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul_2/Enter"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_2/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_1/while/MatMul_2/Enter_grad/Switch:1"
  input: "gradients/gru_1/while/MatMul_2_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul_2/Enter"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_2/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_1/while/MatMul_2/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul_2/Enter"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_2/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_1/while/MatMul_2/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul_2/Enter"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/add_1_grad/Shape"
  op: "Shape"
  input: "gru_1/while/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/add_1_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/add_1_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_1_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/add_1_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/gru_1/while/add_1_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/add_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_1_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/add_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_1/while/add_1_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/gru_1/while/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_1"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/Reshape"
  input: "gradients/gru_1/while/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_1/while/add_1_grad/Sum"
  input: "gradients/gru_1/while/add_1_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_1"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_1/while/clip_by_value/Minimum_grad/Reshape"
  input: "gradients/gru_1/while/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_1/while/add_1_grad/Sum_1"
  input: "gradients/gru_1/while/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_1"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_4_grad/Shape"
  op: "Shape"
  input: "gru_1/while/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_4"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_4_grad/Shape_1"
  op: "Shape"
  input: "gru_1/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_4"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_4_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_4_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_4"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_4_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/mul_4_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/gru_1/while/mul_4_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_4"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_4_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_4"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_4_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/mul_4_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_4_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_4"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_4_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "gradients/gru_1/while/mul_4_grad/BroadcastGradientArgs/RefEnter_1"
  input: "gradients/gru_1/while/mul_4_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_4"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_4_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_4"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_4_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "gradients/gru_1/while/mul_4_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_1/while/mul_4_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/gru_1/while/mul_4_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_4"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_4_grad/mul"
  op: "Mul"
  input: "gradients/gru_1/while/mul_5_grad/Reshape"
  input: "gradients/gru_1/while/mul_6_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_4"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_4_grad/Sum"
  op: "Sum"
  input: "gradients/gru_1/while/mul_4_grad/mul"
  input: "gradients/gru_1/while/mul_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_4"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_1/while/mul_4_grad/Sum"
  input: "gradients/gru_1/while/mul_4_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_4"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_4_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1"
        s: "loc:@gru_1/while/mul_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_4_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_4_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1"
        s: "loc:@gru_1/while/mul_4"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_4_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/mul_4_grad/mul_1/RefEnter"
  input: "gru_1/while/clip_by_value_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1"
        s: "loc:@gru_1/while/mul_4"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_4_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_4_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1"
        s: "loc:@gru_1/while/mul_4"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_4_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/mul_4_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1"
        s: "loc:@gru_1/while/mul_4"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_4_grad/mul_1"
  op: "Mul"
  input: "gradients/gru_1/while/mul_4_grad/mul_1/StackPop"
  input: "gradients/gru_1/while/mul_5_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_4"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_1/while/mul_4_grad/mul_1"
  input: "gradients/gru_1/while/mul_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_4"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_1/while/mul_4_grad/Sum_1"
  input: "gradients/gru_1/while/mul_4_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_4"
      }
    }
  }
}
node {
  name: "gradients/gru_1/strided_slice_5_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/strided_slice_5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000<\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru_1/strided_slice_5_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/gru_1/strided_slice_5_grad/Shape"
  input: "gru_1/strided_slice_5/stack"
  input: "gru_1/strided_slice_5/stack_1"
  input: "gru_1/strided_slice_5/stack_2"
  input: "gradients/gru_1/while/MatMul_2/Enter_grad/b_acc_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/strided_slice_5"
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_1_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_1_grad/Shape_1"
  op: "Shape"
  input: "gru_1/while/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_1_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_1_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/mul_1_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/gru_1/while/mul_1_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_1_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_1/while/mul_1_grad/Shape"
  input: "gradients/gru_1/while/mul_1_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_1"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_1_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add"
        s: "loc:@gru_1/while/mul_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add"
        s: "loc:@gru_1/while/mul_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/mul_1_grad/mul/RefEnter"
  input: "gru_1/while/add"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add"
        s: "loc:@gru_1/while/mul_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add"
        s: "loc:@gru_1/while/mul_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/mul_1_grad/mul/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add"
        s: "loc:@gru_1/while/mul_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_1_grad/mul"
  op: "Mul"
  input: "gradients/gru_1/while/add_1_grad/Reshape"
  input: "gradients/gru_1/while/mul_1_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_1"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/gru_1/while/mul_1_grad/mul"
  input: "gradients/gru_1/while/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_1/while/mul_1_grad/Sum"
  input: "gradients/gru_1/while/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_1"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_1"
        s: "loc:@gru_1/while/mul_1/x"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_1"
        s: "loc:@gru_1/while/mul_1/x"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/mul_1_grad/mul_1/RefEnter"
  input: "gru_1/while/mul_1/x"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_1"
        s: "loc:@gru_1/while/mul_1/x"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_1"
        s: "loc:@gru_1/while/mul_1/x"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_1"
        s: "loc:@gru_1/while/mul_1/x"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_1_grad/mul_1"
  op: "Mul"
  input: "gradients/gru_1/while/mul_1_grad/mul_1/StackPop"
  input: "gradients/gru_1/while/add_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_1"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_1/while/mul_1_grad/mul_1"
  input: "gradients/gru_1/while/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_1/while/mul_1_grad/Sum_1"
  input: "gradients/gru_1/while/mul_1_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_1"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1_grad/Shape"
  op: "Shape"
  input: "gru_1/while/clip_by_value_1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1_grad/Shape_2"
  op: "Shape"
  input: "gradients/gru_1/while/mul_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1_grad/zeros"
  op: "Fill"
  input: "gradients/gru_1/while/clip_by_value_1_grad/Shape_2"
  input: "gradients/gru_1/while/clip_by_value_1_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1_grad/GreaterEqual/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1"
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1_grad/GreaterEqual/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/clip_by_value_1_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1"
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1_grad/GreaterEqual/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/clip_by_value_1_grad/GreaterEqual/RefEnter"
  input: "gru_1/while/clip_by_value_1/Minimum"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1"
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1_grad/GreaterEqual/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/clip_by_value_1_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1"
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1_grad/GreaterEqual/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/clip_by_value_1_grad/GreaterEqual/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1"
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1_grad/GreaterEqual/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Const_2"
        s: "loc:@gru_1/while/clip_by_value_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1_grad/GreaterEqual/RefEnter_1"
  op: "RefEnter"
  input: "gradients/gru_1/while/clip_by_value_1_grad/GreaterEqual/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Const_2"
        s: "loc:@gru_1/while/clip_by_value_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1_grad/GreaterEqual/StackPush_1"
  op: "StackPush"
  input: "gradients/gru_1/while/clip_by_value_1_grad/GreaterEqual/RefEnter_1"
  input: "gru_1/while/Const_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Const_2"
        s: "loc:@gru_1/while/clip_by_value_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1_grad/GreaterEqual/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/clip_by_value_1_grad/GreaterEqual/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Const_2"
        s: "loc:@gru_1/while/clip_by_value_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1_grad/GreaterEqual/StackPop_1"
  op: "StackPop"
  input: "gradients/gru_1/while/clip_by_value_1_grad/GreaterEqual/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Const_2"
        s: "loc:@gru_1/while/clip_by_value_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/gru_1/while/clip_by_value_1_grad/GreaterEqual/StackPop"
  input: "gradients/gru_1/while/clip_by_value_1_grad/GreaterEqual/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/clip_by_value_1_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/gru_1/while/clip_by_value_1_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_1/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/gru_1/while/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1_grad/Select"
  op: "Select"
  input: "gradients/gru_1/while/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/gru_1/while/mul_4_grad/Reshape"
  input: "gradients/gru_1/while/clip_by_value_1_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1_grad/LogicalNot"
  op: "LogicalNot"
  input: "gradients/gru_1/while/clip_by_value_1_grad/GreaterEqual"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1_grad/Select_1"
  op: "Select"
  input: "gradients/gru_1/while/clip_by_value_1_grad/LogicalNot"
  input: "gradients/gru_1/while/mul_4_grad/Reshape"
  input: "gradients/gru_1/while/clip_by_value_1_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1_grad/Sum"
  op: "Sum"
  input: "gradients/gru_1/while/clip_by_value_1_grad/Select"
  input: "gradients/gru_1/while/clip_by_value_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_1/while/clip_by_value_1_grad/Sum"
  input: "gradients/gru_1/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_1/while/clip_by_value_1_grad/Select_1"
  input: "gradients/gru_1/while/clip_by_value_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_1/while/clip_by_value_1_grad/Sum_1"
  input: "gradients/gru_1/while/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/add_grad/Shape"
  op: "Shape"
  input: "gru_1/while/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_grad/Shape_1"
  op: "Shape"
  input: "gru_1/while/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/add_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/add_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/gru_1/while/add_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/add_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "gradients/gru_1/while/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "gradients/gru_1/while/add_grad/BroadcastGradientArgs/RefEnter_1"
  input: "gradients/gru_1/while/add_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/add_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "gradients/gru_1/while/add_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_1/while/add_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/gru_1/while/add_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/add_grad/Sum"
  op: "Sum"
  input: "gradients/gru_1/while/mul_1_grad/Reshape_1"
  input: "gradients/gru_1/while/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_1/while/add_grad/Sum"
  input: "gradients/gru_1/while/add_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_1/while/mul_1_grad/Reshape_1"
  input: "gradients/gru_1/while/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_1/while/add_grad/Sum_1"
  input: "gradients/gru_1/while/add_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/Shape"
  op: "Shape"
  input: "gru_1/while/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/gru_1/while/clip_by_value_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/Shape_2"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_3"
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/LessEqual/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_3"
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/LessEqual/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/LessEqual/RefEnter"
  input: "gru_1/while/add_3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_3"
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/LessEqual/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_3"
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/LessEqual/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/LessEqual/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_3"
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/LessEqual/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Const_3"
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/LessEqual/RefEnter_1"
  op: "RefEnter"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/LessEqual/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Const_3"
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/LessEqual/StackPush_1"
  op: "StackPush"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/LessEqual/RefEnter_1"
  input: "gru_1/while/Const_3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Const_3"
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/LessEqual/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/LessEqual/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Const_3"
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/LessEqual/StackPop_1"
  op: "StackPop"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/LessEqual/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Const_3"
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/LessEqual/StackPop"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/LessEqual/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/Select"
  op: "Select"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/gru_1/while/clip_by_value_1_grad/Reshape"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/LogicalNot"
  op: "LogicalNot"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/LessEqual"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/LogicalNot"
  input: "gradients/gru_1/while/clip_by_value_1_grad/Reshape"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/Select"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/Sum"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/Select_1"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/Sum_1"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/clip_by_value_1/Minimum"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_grad/Shape"
  op: "Shape"
  input: "gru_1/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/RefEnter"
  input: "gradients/gru_1/while/strided_slice_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice"
        s: "loc:@gru_1/while/strided_slice/stack"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/RefEnter_1"
  op: "RefEnter"
  input: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice"
        s: "loc:@gru_1/while/strided_slice/stack"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/StackPush_1"
  op: "StackPush"
  input: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/RefEnter_1"
  input: "gru_1/while/strided_slice/stack"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice"
        s: "loc:@gru_1/while/strided_slice/stack"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice"
        s: "loc:@gru_1/while/strided_slice/stack"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/StackPop_1"
  op: "StackPop"
  input: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice"
        s: "loc:@gru_1/while/strided_slice/stack"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/f_acc_2"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice"
        s: "loc:@gru_1/while/strided_slice/stack_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/RefEnter_2"
  op: "RefEnter"
  input: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice"
        s: "loc:@gru_1/while/strided_slice/stack_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/StackPush_2"
  op: "StackPush"
  input: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/RefEnter_2"
  input: "gru_1/while/strided_slice/stack_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice"
        s: "loc:@gru_1/while/strided_slice/stack_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/StackPop_2/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice"
        s: "loc:@gru_1/while/strided_slice/stack_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/StackPop_2"
  op: "StackPop"
  input: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/StackPop_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice"
        s: "loc:@gru_1/while/strided_slice/stack_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/f_acc_3"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice"
        s: "loc:@gru_1/while/strided_slice/stack_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/RefEnter_3"
  op: "RefEnter"
  input: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/f_acc_3"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice"
        s: "loc:@gru_1/while/strided_slice/stack_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/StackPush_3"
  op: "StackPush"
  input: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/RefEnter_3"
  input: "gru_1/while/strided_slice/stack_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice"
        s: "loc:@gru_1/while/strided_slice/stack_2"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/StackPop_3/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/f_acc_3"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice"
        s: "loc:@gru_1/while/strided_slice/stack_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/StackPop_3"
  op: "StackPop"
  input: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/StackPop_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice"
        s: "loc:@gru_1/while/strided_slice/stack_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/StackPop"
  input: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/StackPop_1"
  input: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/StackPop_2"
  input: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad/StackPop_3"
  input: "gradients/gru_1/while/add_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice"
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "gru_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_1/while/add_grad/Reshape_1"
  input: "gradients/gru_1/while/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul"
        s: "loc:@gru_1/while/mul"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul"
        s: "loc:@gru_1/while/mul"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/MatMul_grad/MatMul_1/RefEnter"
  input: "gru_1/while/mul"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul"
        s: "loc:@gru_1/while/mul"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul"
        s: "loc:@gru_1/while/mul"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul"
        s: "loc:@gru_1/while/mul"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_1/while/MatMul_grad/MatMul_1/StackPop"
  input: "gradients/gru_1/while/add_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/add_3_grad/Shape"
  op: "Shape"
  input: "gru_1/while/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_3"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_3_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/add_3_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/add_3_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_3"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_3_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/add_3_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/gru_1/while/add_3_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_3"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/add_3_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_3"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_3_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/add_3_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_1/while/add_3_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/gru_1/while/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_3"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/add_3_grad/Sum"
  op: "Sum"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/Reshape"
  input: "gradients/gru_1/while/add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_3"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_1/while/add_3_grad/Sum"
  input: "gradients/gru_1/while/add_3_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_3"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_1/while/clip_by_value_1/Minimum_grad/Reshape"
  input: "gradients/gru_1/while/add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_3"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_1/while/add_3_grad/Sum_1"
  input: "gradients/gru_1/while/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_3"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_grad/Shape"
  op: "Shape"
  input: "gru_1/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/gru_1/while/mul_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_1/while/mul_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/gru_1/while/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul"
        s: "loc:@gru_1/while/mul/y"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul"
        s: "loc:@gru_1/while/mul/y"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/mul_grad/mul/RefEnter"
  input: "gru_1/while/mul/y"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul"
        s: "loc:@gru_1/while/mul/y"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul"
        s: "loc:@gru_1/while/mul/y"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/mul_grad/mul/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul"
        s: "loc:@gru_1/while/mul/y"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_grad/mul"
  op: "Mul"
  input: "gradients/gru_1/while/MatMul_grad/MatMul"
  input: "gradients/gru_1/while/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_grad/Sum"
  op: "Sum"
  input: "gradients/gru_1/while/mul_grad/mul"
  input: "gradients/gru_1/while/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_1/while/mul_grad/Sum"
  input: "gradients/gru_1/while/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_grad/mul_1"
  op: "Mul"
  input: "gradients/gru_1/while/mul_6_grad/mul/StackPop"
  input: "gradients/gru_1/while/MatMul_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_1/while/mul_grad/mul_1"
  input: "gradients/gru_1/while/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_1/while/mul_grad/Sum_1"
  input: "gradients/gru_1/while/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul/Enter"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20
          }
          dim {
            size: 20
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_1/while/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_1/while/MatMul/Enter_grad/b_acc_1"
  input: "gradients/gru_1/while/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul/Enter"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_1/while/MatMul/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul/Enter"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_1/while/MatMul/Enter_grad/Switch:1"
  input: "gradients/gru_1/while/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul/Enter"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_1/while/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul/Enter"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_1/while/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul/Enter"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_3_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_3_grad/Shape_1"
  op: "Shape"
  input: "gru_1/while/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_3"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_3_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_3_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_3"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_3_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/mul_3_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/gru_1/while/mul_3_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_3"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_3_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_3"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_3_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/mul_3_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_1/while/mul_3_grad/Shape"
  input: "gradients/gru_1/while/mul_3_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_3"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_3_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_2"
        s: "loc:@gru_1/while/mul_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_3_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_3_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_2"
        s: "loc:@gru_1/while/mul_3"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_3_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/mul_3_grad/mul/RefEnter"
  input: "gru_1/while/add_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_2"
        s: "loc:@gru_1/while/mul_3"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_3_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_3_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_2"
        s: "loc:@gru_1/while/mul_3"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_3_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/mul_3_grad/mul/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_2"
        s: "loc:@gru_1/while/mul_3"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_3_grad/mul"
  op: "Mul"
  input: "gradients/gru_1/while/add_3_grad/Reshape"
  input: "gradients/gru_1/while/mul_3_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_3"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/gru_1/while/mul_3_grad/mul"
  input: "gradients/gru_1/while/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_3"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_1/while/mul_3_grad/Sum"
  input: "gradients/gru_1/while/mul_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_3"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_3_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_3"
        s: "loc:@gru_1/while/mul_3/x"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_3_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_3_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_3"
        s: "loc:@gru_1/while/mul_3/x"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_3_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/mul_3_grad/mul_1/RefEnter"
  input: "gru_1/while/mul_3/x"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_3"
        s: "loc:@gru_1/while/mul_3/x"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_3_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_3_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_3"
        s: "loc:@gru_1/while/mul_3/x"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_3_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/mul_3_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_3"
        s: "loc:@gru_1/while/mul_3/x"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_3_grad/mul_1"
  op: "Mul"
  input: "gradients/gru_1/while/mul_3_grad/mul_1/StackPop"
  input: "gradients/gru_1/while/add_3_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_3"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_1/while/mul_3_grad/mul_1"
  input: "gradients/gru_1/while/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_3"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_1/while/mul_3_grad/Sum_1"
  input: "gradients/gru_1/while/mul_3_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_3"
      }
    }
  }
}
node {
  name: "gradients/gru_1/strided_slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/strided_slice_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000<\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru_1/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/gru_1/strided_slice_1_grad/Shape"
  input: "gru_1/strided_slice_1/stack"
  input: "gru_1/strided_slice_1/stack_1"
  input: "gru_1/strided_slice_1/stack_2"
  input: "gradients/gru_1/while/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/strided_slice_1"
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/gru_1/while/add_2_grad/Shape"
  op: "Shape"
  input: "gru_1/while/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_2"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_2_grad/Shape_1"
  op: "Shape"
  input: "gru_1/while/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_2"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_2_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/add_2_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_2_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/add_2_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/gru_1/while/add_2_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_2"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/add_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_2_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/add_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/add_2_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "gradients/gru_1/while/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_2_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "gradients/gru_1/while/add_2_grad/BroadcastGradientArgs/RefEnter_1"
  input: "gradients/gru_1/while/add_2_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_2"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/add_2_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_2_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "gradients/gru_1/while/add_2_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_1/while/add_2_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/gru_1/while/add_2_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_2"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/gru_1/while/mul_3_grad/Reshape_1"
  input: "gradients/gru_1/while/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_2"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_1/while/add_2_grad/Sum"
  input: "gradients/gru_1/while/add_2_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_2"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_1/while/mul_3_grad/Reshape_1"
  input: "gradients/gru_1/while/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_2"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_1/while/add_2_grad/Sum_1"
  input: "gradients/gru_1/while/add_2_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/add_2"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_1_grad/Shape"
  op: "Shape"
  input: "gru_1/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/RefEnter"
  input: "gradients/gru_1/while/strided_slice_1_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_1"
        s: "loc:@gru_1/while/strided_slice_1/stack"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/RefEnter_1"
  op: "RefEnter"
  input: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_1"
        s: "loc:@gru_1/while/strided_slice_1/stack"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/StackPush_1"
  op: "StackPush"
  input: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/RefEnter_1"
  input: "gru_1/while/strided_slice_1/stack"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_1"
        s: "loc:@gru_1/while/strided_slice_1/stack"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_1"
        s: "loc:@gru_1/while/strided_slice_1/stack"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/StackPop_1"
  op: "StackPop"
  input: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/StackPop_1/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_1"
        s: "loc:@gru_1/while/strided_slice_1/stack"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/f_acc_2"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_1"
        s: "loc:@gru_1/while/strided_slice_1/stack_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/RefEnter_2"
  op: "RefEnter"
  input: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_1"
        s: "loc:@gru_1/while/strided_slice_1/stack_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/StackPush_2"
  op: "StackPush"
  input: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/RefEnter_2"
  input: "gru_1/while/strided_slice_1/stack_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_1"
        s: "loc:@gru_1/while/strided_slice_1/stack_1"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/StackPop_2/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/f_acc_2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_1"
        s: "loc:@gru_1/while/strided_slice_1/stack_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/StackPop_2"
  op: "StackPop"
  input: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/StackPop_2/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_1"
        s: "loc:@gru_1/while/strided_slice_1/stack_1"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/f_acc_3"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_1"
        s: "loc:@gru_1/while/strided_slice_1/stack_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/RefEnter_3"
  op: "RefEnter"
  input: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/f_acc_3"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_1"
        s: "loc:@gru_1/while/strided_slice_1/stack_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/StackPush_3"
  op: "StackPush"
  input: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/RefEnter_3"
  input: "gru_1/while/strided_slice_1/stack_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_1"
        s: "loc:@gru_1/while/strided_slice_1/stack_2"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/StackPop_3/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/f_acc_3"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_1"
        s: "loc:@gru_1/while/strided_slice_1/stack_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/StackPop_3"
  op: "StackPop"
  input: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/StackPop_3/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_1"
        s: "loc:@gru_1/while/strided_slice_1/stack_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/StackPop"
  input: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/StackPop_1"
  input: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/StackPop_2"
  input: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad/StackPop_3"
  input: "gradients/gru_1/while/add_2_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_1"
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "gru_1/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_1/while/add_2_grad/Reshape_1"
  input: "gradients/gru_1/while/MatMul_1_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul_1"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_1_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul_1"
        s: "loc:@gru_1/while/mul_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_1_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul_1"
        s: "loc:@gru_1/while/mul_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_1_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/MatMul_1_grad/MatMul_1/RefEnter"
  input: "gru_1/while/mul_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul_1"
        s: "loc:@gru_1/while/mul_2"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_1_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul_1"
        s: "loc:@gru_1/while/mul_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_1_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/MatMul_1_grad/MatMul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul_1"
        s: "loc:@gru_1/while/mul_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru_1/while/MatMul_1_grad/MatMul_1/StackPop"
  input: "gradients/gru_1/while/add_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul_1"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/gru_1/while/strided_slice_2_grad/StridedSliceGrad"
  input: "gradients/gru_1/while/strided_slice_grad/StridedSliceGrad"
  input: "gradients/gru_1/while/strided_slice_1_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/strided_slice_2"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gru_1/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/TensorArrayReadV3"
        s: "loc:@gru_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "gru_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/TensorArrayReadV3"
        s: "loc:@gru_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/gru_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/gru_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/TensorArrayReadV3"
        s: "loc:@gru_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/gru_1/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/gru_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/gru_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/TensorArrayReadV3"
        s: "loc:@gru_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gradients/gru_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/gru_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "gradients/AddN_2"
  input: "gradients/gru_1/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/TensorArrayReadV3"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_2_grad/Shape"
  op: "Shape"
  input: "gru_1/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_2"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_2_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_2_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_2_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/mul_2_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/gru_1/while/mul_2_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_2"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_2"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_2_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/mul_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_2"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru_1/while/mul_2_grad/BroadcastGradientArgs/StackPop"
  input: "gradients/gru_1/while/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_2"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_2_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_2"
        s: "loc:@gru_1/while/mul_2/y"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_2_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_2"
        s: "loc:@gru_1/while/mul_2/y"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_2_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients/gru_1/while/mul_2_grad/mul/RefEnter"
  input: "gru_1/while/mul_2/y"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_2"
        s: "loc:@gru_1/while/mul_2/y"
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_2_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru_1/while/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_2"
        s: "loc:@gru_1/while/mul_2/y"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_2_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients/gru_1/while/mul_2_grad/mul/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_2"
        s: "loc:@gru_1/while/mul_2/y"
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_2_grad/mul"
  op: "Mul"
  input: "gradients/gru_1/while/MatMul_1_grad/MatMul"
  input: "gradients/gru_1/while/mul_2_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_2"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/gru_1/while/mul_2_grad/mul"
  input: "gradients/gru_1/while/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_2"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_1/while/mul_2_grad/Sum"
  input: "gradients/gru_1/while/mul_2_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_2"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_2_grad/mul_1"
  op: "Mul"
  input: "gradients/gru_1/while/mul_6_grad/mul/StackPop"
  input: "gradients/gru_1/while/MatMul_1_grad/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_2"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru_1/while/mul_2_grad/mul_1"
  input: "gradients/gru_1/while/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_2"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/while/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru_1/while/mul_2_grad/Sum_1"
  input: "gradients/gru_1/while/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_2"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul_1/Enter"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20
          }
          dim {
            size: 20
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_1/while/MatMul_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul_1/Enter"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_1/while/MatMul_1/Enter_grad/b_acc_1"
  input: "gradients/gru_1/while/MatMul_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul_1/Enter"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_1/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru_1/while/MatMul_1/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul_1/Enter"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_1/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru_1/while/MatMul_1/Enter_grad/Switch:1"
  input: "gradients/gru_1/while/MatMul_1_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul_1/Enter"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_1/while/MatMul_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul_1/Enter"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/MatMul_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_1/while/MatMul_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/MatMul_1/Enter"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/TensorArrayReadV3/Enter_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru_1/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/TensorArrayReadV3/Enter_1"
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru_1/while/gru_1/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "gradients/gru_1/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/TensorArrayReadV3/Enter_1"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients/gru_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/TensorArrayReadV3/Enter_1"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "gradients/gru_1/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "gradients/gru_1/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/TensorArrayReadV3/Enter_1"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru_1/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/TensorArrayReadV3/Enter_1"
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru_1/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/TensorArrayReadV3/Enter_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/gru_1/while/mul_6_grad/Reshape_1"
  input: "gradients/gru_1/while/mul_4_grad/Reshape_1"
  input: "gradients/gru_1/while/mul_grad/Reshape"
  input: "gradients/gru_1/while/mul_2_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/mul_6"
      }
    }
  }
}
node {
  name: "gradients/gru_1/strided_slice_3_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/strided_slice_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000<\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru_1/strided_slice_3_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/gru_1/strided_slice_3_grad/Shape"
  input: "gru_1/strided_slice_3/stack"
  input: "gru_1/strided_slice_3/stack_1"
  input: "gru_1/strided_slice_3/stack_2"
  input: "gradients/gru_1/while/MatMul_1/Enter_grad/b_acc_3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/strided_slice_3"
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/gru_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gru_1/TensorArray_1"
  input: "gradients/gru_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/TensorArray_1"
        s: "loc:@gru_1/transpose"
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/gru_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/gru_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/gru_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/TensorArray_1"
        s: "loc:@gru_1/transpose"
      }
    }
  }
}
node {
  name: "gradients/gru_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gradients/gru_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gru_1/TensorArrayUnstack/range"
  input: "gradients/gru_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/transpose"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "gradients/gru_1/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/while/Merge_2"
      }
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/gru_1/strided_slice_5_grad/StridedSliceGrad"
  input: "gradients/gru_1/strided_slice_1_grad/StridedSliceGrad"
  input: "gradients/gru_1/strided_slice_3_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/strided_slice_5"
      }
    }
  }
}
node {
  name: "gradients/gru_1/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gru_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/transpose"
      }
    }
  }
}
node {
  name: "gradients/gru_1/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/gru_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "gradients/gru_1/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/transpose"
      }
    }
  }
}
node {
  name: "gradients/gru_1/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/concat"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/gru_1/concat_grad/mod"
  op: "FloorMod"
  input: "gru_1/concat/axis"
  input: "gradients/gru_1/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/concat"
      }
    }
  }
}
node {
  name: "gradients/gru_1/concat_grad/Shape"
  op: "Shape"
  input: "gru_1/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/concat"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/concat_grad/ShapeN"
  op: "ShapeN"
  input: "gru_1/Reshape_2"
  input: "gru_1/Reshape_5"
  input: "gru_1/Reshape_8"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/concat"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru_1/concat_grad/mod"
  input: "gradients/gru_1/concat_grad/ShapeN"
  input: "gradients/gru_1/concat_grad/ShapeN:1"
  input: "gradients/gru_1/concat_grad/ShapeN:2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/concat"
      }
    }
  }
}
node {
  name: "gradients/gru_1/concat_grad/Slice"
  op: "Slice"
  input: "gradients/gru_1/transpose_grad/transpose"
  input: "gradients/gru_1/concat_grad/ConcatOffset"
  input: "gradients/gru_1/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/concat"
      }
    }
  }
}
node {
  name: "gradients/gru_1/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru_1/transpose_grad/transpose"
  input: "gradients/gru_1/concat_grad/ConcatOffset:1"
  input: "gradients/gru_1/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/concat"
      }
    }
  }
}
node {
  name: "gradients/gru_1/concat_grad/Slice_2"
  op: "Slice"
  input: "gradients/gru_1/transpose_grad/transpose"
  input: "gradients/gru_1/concat_grad/ConcatOffset:2"
  input: "gradients/gru_1/concat_grad/ShapeN:2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/concat"
      }
    }
  }
}
node {
  name: "gradients/gru_1/Reshape_2_grad/Shape"
  op: "Shape"
  input: "gru_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/Reshape_2"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_1/concat_grad/Slice"
  input: "gradients/gru_1/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/Reshape_2"
      }
    }
  }
}
node {
  name: "gradients/gru_1/Reshape_5_grad/Shape"
  op: "Shape"
  input: "gru_1/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/Reshape_5"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/Reshape_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_1/concat_grad/Slice_1"
  input: "gradients/gru_1/Reshape_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/Reshape_5"
      }
    }
  }
}
node {
  name: "gradients/gru_1/Reshape_8_grad/Shape"
  op: "Shape"
  input: "gru_1/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/Reshape_8"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru_1/Reshape_8_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru_1/concat_grad/Slice_2"
  input: "gradients/gru_1/Reshape_8_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/Reshape_8"
      }
    }
  }
}
node {
  name: "gradients/gru_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_1/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_1/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_1/Reshape_5_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/BiasAdd_1"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_1/BiasAdd_2_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru_1/Reshape_8_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/BiasAdd_2"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_1/Reshape_2_grad/Reshape"
  input: "gru_1/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gru_1/Reshape_1"
  input: "gradients/gru_1/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/strided_slice_6_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/strided_slice_6"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 60
      }
    }
  }
}
node {
  name: "gradients/gru_1/strided_slice_6_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/gru_1/strided_slice_6_grad/Shape"
  input: "gru_1/strided_slice_6/stack"
  input: "gru_1/strided_slice_6/stack_1"
  input: "gru_1/strided_slice_6/stack_2"
  input: "gradients/gru_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/strided_slice_6"
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/gru_1/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_1/Reshape_5_grad/Reshape"
  input: "gru_1/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/MatMul_1"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gru_1/Reshape_4"
  input: "gradients/gru_1/Reshape_5_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/MatMul_1"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/strided_slice_7_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/strided_slice_7"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 60
      }
    }
  }
}
node {
  name: "gradients/gru_1/strided_slice_7_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/gru_1/strided_slice_7_grad/Shape"
  input: "gru_1/strided_slice_7/stack"
  input: "gru_1/strided_slice_7/stack_1"
  input: "gru_1/strided_slice_7/stack_2"
  input: "gradients/gru_1/BiasAdd_1_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/strided_slice_7"
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/gru_1/MatMul_2_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru_1/Reshape_8_grad/Reshape"
  input: "gru_1/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/MatMul_2"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru_1/MatMul_2_grad/MatMul_1"
  op: "MatMul"
  input: "gru_1/Reshape_7"
  input: "gradients/gru_1/Reshape_8_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/MatMul_2"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru_1/strided_slice_8_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/strided_slice_8"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 60
      }
    }
  }
}
node {
  name: "gradients/gru_1/strided_slice_8_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/gru_1/strided_slice_8_grad/Shape"
  input: "gru_1/strided_slice_8/stack"
  input: "gru_1/strided_slice_8/stack_1"
  input: "gru_1/strided_slice_8/stack_2"
  input: "gradients/gru_1/BiasAdd_2_grad/BiasAddGrad"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/strided_slice_8"
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/gru_1/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/strided_slice"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000<\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru_1/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/gru_1/strided_slice_grad/Shape"
  input: "gru_1/strided_slice/stack"
  input: "gru_1/strided_slice/stack_1"
  input: "gru_1/strided_slice/stack_2"
  input: "gradients/gru_1/MatMul_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/strided_slice"
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/gru_1/strided_slice_2_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/strided_slice_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000<\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru_1/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/gru_1/strided_slice_2_grad/Shape"
  input: "gru_1/strided_slice_2/stack"
  input: "gru_1/strided_slice_2/stack_1"
  input: "gru_1/strided_slice_2/stack_2"
  input: "gradients/gru_1/MatMul_1_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/strided_slice_2"
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/gru_1/strided_slice_4_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/strided_slice_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000<\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru_1/strided_slice_4_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/gru_1/strided_slice_4_grad/Shape"
  input: "gru_1/strided_slice_4/stack"
  input: "gru_1/strided_slice_4/stack_1"
  input: "gru_1/strided_slice_4/stack_2"
  input: "gradients/gru_1/MatMul_2_grad/MatMul_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/strided_slice_4"
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/gru_1/strided_slice_6_grad/StridedSliceGrad"
  input: "gradients/gru_1/strided_slice_7_grad/StridedSliceGrad"
  input: "gradients/gru_1/strided_slice_8_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/strided_slice_6"
      }
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/gru_1/strided_slice_grad/StridedSliceGrad"
  input: "gradients/gru_1/strided_slice_2_grad/StridedSliceGrad"
  input: "gradients/gru_1/strided_slice_4_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/strided_slice"
      }
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 13
          }
          dim {
            size: 60
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 13
        }
        dim {
          size: 60
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable/Assign"
  op: "Assign"
  input: "Variable"
  input: "Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable/read"
  op: "Identity"
  input: "Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20
          }
          dim {
            size: 60
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 60
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_1/Assign"
  op: "Assign"
  input: "Variable_1"
  input: "Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_1/read"
  op: "Identity"
  input: "Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
}
node {
  name: "Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 60
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_2"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 60
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_2/Assign"
  op: "Assign"
  input: "Variable_2"
  input: "Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_2/read"
  op: "Identity"
  input: "Variable_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
}
node {
  name: "Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_3"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_3/Assign"
  op: "Assign"
  input: "Variable_3"
  input: "Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_3/read"
  op: "Identity"
  input: "Variable_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
}
node {
  name: "Const_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_4"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_4/Assign"
  op: "Assign"
  input: "Variable_4"
  input: "Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_4/read"
  op: "Identity"
  input: "Variable_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
}
node {
  name: "mul_2"
  op: "Mul"
  input: "rho/read"
  input: "Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sub_1"
  op: "Sub"
  input: "sub_1/x"
  input: "rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_1"
  op: "Square"
  input: "gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_3"
  op: "Mul"
  input: "sub_1"
  input: "Square_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "mul_2"
  input: "mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_5"
  op: "Assign"
  input: "Variable"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "mul_4"
  op: "Mul"
  input: "lr/read"
  input: "gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "clip_by_value/Minimum"
  op: "Minimum"
  input: "add"
  input: "Const_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_value"
  op: "Maximum"
  input: "clip_by_value/Minimum"
  input: "Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt"
  op: "Sqrt"
  input: "clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_1"
  op: "Add"
  input: "Sqrt"
  input: "add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_1"
  op: "RealDiv"
  input: "mul_4"
  input: "add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_2"
  op: "Sub"
  input: "gru_1/kernel/read"
  input: "truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_6"
  op: "Assign"
  input: "gru_1/kernel"
  input: "sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "mul_5"
  op: "Mul"
  input: "rho/read"
  input: "Variable_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sub_3"
  op: "Sub"
  input: "sub_3/x"
  input: "rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_2"
  op: "Square"
  input: "gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_6"
  op: "Mul"
  input: "sub_3"
  input: "Square_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_2"
  op: "Add"
  input: "mul_5"
  input: "mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_7"
  op: "Assign"
  input: "Variable_1"
  input: "add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "mul_7"
  op: "Mul"
  input: "lr/read"
  input: "gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Const_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "clip_by_value_1/Minimum"
  op: "Minimum"
  input: "add_2"
  input: "Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_value_1"
  op: "Maximum"
  input: "clip_by_value_1/Minimum"
  input: "Const_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_1"
  op: "Sqrt"
  input: "clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_3"
  op: "Add"
  input: "Sqrt_1"
  input: "add_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_2"
  op: "RealDiv"
  input: "mul_7"
  input: "add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_4"
  op: "Sub"
  input: "gru_1/recurrent_kernel/read"
  input: "truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_8"
  op: "Assign"
  input: "gru_1/recurrent_kernel"
  input: "sub_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "mul_8"
  op: "Mul"
  input: "rho/read"
  input: "Variable_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sub_5"
  op: "Sub"
  input: "sub_5/x"
  input: "rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_3"
  op: "Square"
  input: "gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_9"
  op: "Mul"
  input: "sub_5"
  input: "Square_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_4"
  op: "Add"
  input: "mul_8"
  input: "mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_9"
  op: "Assign"
  input: "Variable_2"
  input: "add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "mul_10"
  op: "Mul"
  input: "lr/read"
  input: "gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Const_13"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "clip_by_value_2/Minimum"
  op: "Minimum"
  input: "add_4"
  input: "Const_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_value_2"
  op: "Maximum"
  input: "clip_by_value_2/Minimum"
  input: "Const_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_2"
  op: "Sqrt"
  input: "clip_by_value_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_5/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_5"
  op: "Add"
  input: "Sqrt_2"
  input: "add_5/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_3"
  op: "RealDiv"
  input: "mul_10"
  input: "add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_6"
  op: "Sub"
  input: "gru_1/bias/read"
  input: "truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_10"
  op: "Assign"
  input: "gru_1/bias"
  input: "sub_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "mul_11"
  op: "Mul"
  input: "rho/read"
  input: "Variable_3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_7/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sub_7"
  op: "Sub"
  input: "sub_7/x"
  input: "rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_4"
  op: "Square"
  input: "gradients/dense_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_12"
  op: "Mul"
  input: "sub_7"
  input: "Square_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_6"
  op: "Add"
  input: "mul_11"
  input: "mul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_11"
  op: "Assign"
  input: "Variable_3"
  input: "add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "mul_13"
  op: "Mul"
  input: "lr/read"
  input: "gradients/dense_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Const_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "clip_by_value_3/Minimum"
  op: "Minimum"
  input: "add_6"
  input: "Const_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_value_3"
  op: "Maximum"
  input: "clip_by_value_3/Minimum"
  input: "Const_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_3"
  op: "Sqrt"
  input: "clip_by_value_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_7/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_7"
  op: "Add"
  input: "Sqrt_3"
  input: "add_7/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_4"
  op: "RealDiv"
  input: "mul_13"
  input: "add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_8"
  op: "Sub"
  input: "dense_1/kernel/read"
  input: "truediv_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_12"
  op: "Assign"
  input: "dense_1/kernel"
  input: "sub_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "mul_14"
  op: "Mul"
  input: "rho/read"
  input: "Variable_4/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_9/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sub_9"
  op: "Sub"
  input: "sub_9/x"
  input: "rho/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Square_5"
  op: "Square"
  input: "gradients/dense_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_15"
  op: "Mul"
  input: "sub_9"
  input: "Square_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_8"
  op: "Add"
  input: "mul_14"
  input: "mul_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_13"
  op: "Assign"
  input: "Variable_4"
  input: "add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "mul_16"
  op: "Mul"
  input: "lr/read"
  input: "gradients/dense_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const_16"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Const_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "clip_by_value_4/Minimum"
  op: "Minimum"
  input: "add_8"
  input: "Const_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_value_4"
  op: "Maximum"
  input: "clip_by_value_4/Minimum"
  input: "Const_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Sqrt_4"
  op: "Sqrt"
  input: "clip_by_value_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_9/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "add_9"
  op: "Add"
  input: "Sqrt_4"
  input: "add_9/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truediv_5"
  op: "RealDiv"
  input: "mul_16"
  input: "add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_10"
  op: "Sub"
  input: "dense_1/bias/read"
  input: "truediv_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Assign_14"
  op: "Assign"
  input: "dense_1/bias"
  input: "sub_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^mul_1"
  input: "^Mean_5"
  input: "^Assign_5"
  input: "^Assign_6"
  input: "^Assign_7"
  input: "^Assign_8"
  input: "^Assign_9"
  input: "^Assign_10"
  input: "^Assign_11"
  input: "^Assign_12"
  input: "^Assign_13"
  input: "^Assign_14"
}
node {
  name: "init_1"
  op: "NoOp"
  input: "^lr/Assign"
  input: "^rho/Assign"
  input: "^decay/Assign"
  input: "^iterations/Assign"
  input: "^Variable/Assign"
  input: "^Variable_1/Assign"
  input: "^Variable_2/Assign"
  input: "^Variable_3/Assign"
  input: "^Variable_4/Assign"
}
node {
  name: "Placeholder_5"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 13
        }
        dim {
          size: 60
        }
      }
    }
  }
}
node {
  name: "Assign_15"
  op: "Assign"
  input: "Variable"
  input: "Placeholder_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_6"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 60
        }
      }
    }
  }
}
node {
  name: "Assign_16"
  op: "Assign"
  input: "Variable_1"
  input: "Placeholder_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_7"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 60
        }
      }
    }
  }
}
node {
  name: "Assign_17"
  op: "Assign"
  input: "Variable_2"
  input: "Placeholder_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_8"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_18"
  op: "Assign"
  input: "Variable_3"
  input: "Placeholder_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_9"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_19"
  op: "Assign"
  input: "Variable_4"
  input: "Placeholder_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "net_out"
  op: "Identity"
  input: "dense_1/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
versions {
  producer: 22
}
